<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns='http://www.w3.org/2005/Atom'
      xmlns:thr='http://purl.org/syndication/thread/1.0'
      xml:lang='en-us'>
 <title>ongoing by Tim Bray</title>
 <link rel='hub' href='http://pubsubhubbub.appspot.com/' />
 <id>https://www.tbray.org/ongoing/</id>
 <link href='https://www.tbray.org/ongoing/' />
 <link rel='self' href='https://www.tbray.org/ongoing/ongoing.atom' />
 <link rel='replies'       thr:count='101'       href='https://www.tbray.org/ongoing/comments.atom' />
 <logo>rsslogo.jpg</logo>
 <icon>/favicon.ico</icon>
 <updated>2019-02-22T10:33:02-08:00</updated>
 <author><name>Tim Bray</name></author>
 <subtitle>ongoing fragmented essay by Tim Bray</subtitle>
 <rights>All content written by Tim Bray and photos by Tim Bray Copyright Tim Bray, some rights reserved, see /ongoing/misc/Copyright</rights>
 <generator uri='/misc/Colophon'>Generated from XML source code using Perl, Expat, Emacs, Mysql, Ruby, Java, and ImageMagick.  Industrial-strength technology, baby.</generator>

<entry>
 <title>Tech Office Sketches</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2019/02/15/Walking-Around-the-Office' />
 <link rel='replies'        thr:count='7'        type='application/xhtml+xml'        href='/ongoing/When/201x/2019/02/15/Walking-Around-the-Office#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2019/02/15/Walking-Around-the-Office</id>
 <published>2019-02-15T12:00:00-08:00</published>
 <updated>2019-02-18T18:24:36-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology/Software' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Software' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology/Internet' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Internet' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>Herewith notes from the white-hot center of the Internet software profession. Maybe the reality these reflect prevails across other technology territories, but I wouldnâ€™t know.  In no particular order:</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>Herewith notes from the white-hot center of the Internet software profession. Maybe the reality these reflect prevails across
other technology territories, but I wouldnâ€™t know.  In no particular order:</p>
<h2 id='p-1'>Videoconferencing</h2>
<p>Generally it sucks. Thereâ€™s Skype â€™nâ€™ TeamViewer â€™nâ€™ Zoom â€™nâ€™ Webex â€™nâ€™ our own
<a href="https://aws.amazon.com/chime/">Chime</a> â€™nâ€™ GoToMeeting â€™nâ€™ join.me and they all suck in their own unlovable idiosyncratic
ways. The visual glitches I can tolerate, but the audio problems make me want to scream; dropouts, static, echoes, the noise of
hands softly leafing through a document drowning out any non-booming voice.</p>
<p>In my decades-long career, Iâ€™ve used one videoconferencing system that was reliable and almost always Just Worked. It was by
Polycom, but then the infrastructure people said â€œsuper old schoolâ€ and replaced it with something modern that often doesnâ€™t. I
suspect darkly that the technology is passable but a bean-counter somewhere has refused to buy enough bandwidth to make it sing?
Blecch.</p>
<h2 id='p-2'>Screens</h2>
<p>The amount of screen real-estate per geek grows monotonically. Dual-27" screens plus your laptopâ€™s own screen are table
stakes, and Iâ€™m seeing the occasional massive 50"-plus 4K screen. I asked one guy
â€œHow can you <em>use</em> all that space?â€ He said â€œI canâ€™t of course, all the stuff Iâ€™m actively working on is in the middle third,
bottom half. But having everything else within visible reach is such a win.â€  OK then.</p>
<p>I have to admit that Iâ€™m becoming increasingly conscious that the pixels on my
<a href="/ongoing/When/201x/2016/02/24/Dell-U3415W">curved 34" Dell U3415W</a> <em>are</em> in fact visible,
and the contrast between that and my Retina laptop screens is a perceptible irritant. #FirstWorldProblem.</p>
<h2 id='p-3'>Desks</h2>
<p>The proportion that are motorized is higher every quarter.  Iâ€™d find it hard to live without mine.  The mix of people standing
and sitting makes the otherwise-dreary rows of software-engineer desks a little easier on the eye, which welcomes disorderly human
distributions.</p>
<h2 id='p-4'>Office space</h2>
<p>Since I mentioned it: All the high-tech companies Iâ€™ve worked for have resolutely ignored the research I hear about that seems to
say putting expensive engineers out on the floor with no separating walls leads to grievous productivity losses. Isnâ€™t this biz
supposed to be data-driven?</p>
<h2 id='p-5'>Diversity</h2>
<p>We do
<a href="/ongoing/When/201x/2019/02/09/D-and-I-training">work on the problem</a>, but the gender ratios are still not good.</p>
<p>If you can get past that (I canâ€™t) there are grounds for good cheer.  Here in Vancouver we draw from the very considerable
Canadian talent pool, but our immigration law lets us hire major distributed-systems talent from almost anywhere in the
world.
The resulting mix actually makes me feel optimistic about humanity; the AWS Service groups that
surround me offer visible in-the-flesh proof that thereâ€™s plenty of software talent in any ethnic, linguistic, or geographic slice
across the membership of <i>Homo sapiens</i>.</p>
<p>Iâ€™m amused that when chance lands two engineers on a problem who happen to share a native
tongue, they immediately drop out of English and into Polish or some south-central Han dialect or whatever it is Nigerian
geeks speak to each other.  Thereâ€™s this one group near me that has three guys named Muhammad; one them is called by his actual name, then
thereâ€™s â€œMoâ€ and â€œMomoâ€. It seems to work, and by the way Momo seems to be the leading expert on AWS Region Build Automation, which
is a big freaking hairy deal around here. Protip to the industry: If youâ€™re not recruiting out of West Africa, youâ€™re missing out on
major engineering talent.</p>
<h2 id='p-6'>Darkness</h2>
<p>Iâ€™m talking about screens. What with the advent of Mojave, light text on a dark background has officially re-entered the GUI
mainstream.  But more or less all the younger engineers had already switched their IDEs over to light-on-dark. My
white-background IntelliJ and Goland screens mark me as a dinosaur.</p>
<p>Iâ€™ve cared deeply about typography and presentation for a long
time and the issues here are interesting. I freely acknowledge that my preference for dark-on-light is probably an artifact of my
having tuned my brain, in my youth, to ink-on-paper.  Since screens are, at the end of the day, light-displaying devices, thereâ€™s an
argument that the natural on-screen design language for typography and information display is light-on-dark. I wonder if thereâ€™s
quantitative research in the space?</p>
<h2 id='p-7'>Speaking of IDEs</h2>
<p>I guess the big story is the decline of Eclipse from â€œmore or less everybodyâ€™s defaultâ€ to â€œthere are still people using itâ€.  VS
Code has momentum
but IntelliJ has a plenty of loyalists, and then the front-end tribe are often in Atom and Sublime.  Iâ€™m happy to report that
neither Vim nor Emacs have gone away.  But recently our license server was having problems and I couldnâ€™t use Goland and found the Emacs
go-mode story pretty weak.</p>
<h2 id='p-8'>Speaking of languages</h2>
<p>Itâ€™s no secret that the Internet still runs, more than anything else, on Java. Could be worse, I remember when it all ran on PHP
and Perl. And I donâ€™t want to diss Java <em>too</em> much.  The tooling story is exceptional, and once your JVM gets properly warmed
up, thereâ€™s nothing that runs usefully faster. And these days, for new stuff you should spell Java â€œKotlinâ€.  Especially since if
you let those young pups who wonâ€™t get off my lawn use Java, theyâ€™ll emit all this Java 8+ stream/lambda stuff that is easy to make
indecipherable.</p>
<p>Whatâ€™s happening out on the front-end frontier, the Cambrian explosion of JS-based technologies, makes me happy that I mostly
donâ€™t go there.</p>
<p>On the back end where I live, weâ€™ve got Go and Rust creeping in big-time. Iâ€™m no longer surprised when I pull up some package
buried deep in our serverless infrastructure and it turns out to be in Go. Well, and for serverless code too, if only because of the
fast startup.</p>
<p>If you live in the world of ML or data science, youâ€™re using Python; you donâ€™t have a choice and itâ€™s not
terrible.</p>
<p>Then Rust, for when you get close to the metal.  There was an internal new-languages thread where someone said â€œIf you canâ€™t
tolerate GC, use Rust. Otherwise use Go.â€  Sounds reasonable.
A few zealots are saying everything new should be in Rust because otherwise youâ€™re being
wilfullly unsafe. But I like having the runtime manage memory for me, whenever I can get away with it.</p>
<h2 id='p-9'>Inside the software</h2>
<p>REST is still a really good way to piece pieces of the software world together. Of course, what with the rise of HTTP/2 and QUIC,
what the programmer thinks of as RESTful requests are something quite other, out on the wire.  This feels about like us
thinking weâ€™re using x86 instructions on our silicon even though what the circuits are doing is really totally different.</p>
<p>To the extent that interfaces arenâ€™t REST, theyâ€™re mostly event streams of one kind or another. Where by â€œEventâ€ I mean â€œJSON
blobâ€; by and large good enough.  This is the area Iâ€™m working on this year, lots of opportunities for improvement.</p>
<p>The good news: Each generation of devs that comes along is a little more test-infected than its predecessors.  I still run
across islands of ignorance where they think itâ€™s OK to ship code now and do the unit tests later (as if that ever happens), but
less and less each year.</p>
<h2 id='p-10'>Which computers?</h2>
<p>Still more Macs than anything else, although thereâ€™s an undeniable Windows renaissance. Having said that, even the smart people
with the coolest Surface devices are often bitching about problems with things called â€œdriversâ€<span class='dashes'>â€‰â€”</span>â€‰what
are those for, anyhow?<span class='dashes'>â€‰â€”</span>â€‰and lockups, and saying â€œSorry, just a moment while I get my computer goingâ€.</p>
<p>If I were a little less aged and cynical, Iâ€™d be boiling over with anger at Appleâ€™s inexcusable stewardship of the Mac franchise;
<a href="https://daringfireball.net/2019/02/my_2018_apple_report_card">Gruberâ€™s â€œDâ€ grade</a> is maybe even generous. This is a
product that used to feature instant wake-up (gone), MagSafe (gone), lots of useful I/O ports including SD card readers (gone), a
good built-in photo editor (gone), and the worldâ€™s best keyboards (gone). It absolutely shocks me that a company can get away with
making its product successively
worse and then worse again, year after year. Among other things it speaks to how good the core design of MacOS is.</p>
<p>But maybe 2020 is the year of Linux on the desktop?</p>
</div></content></entry>

<entry>
 <title>D&amp;I Soundbites</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2019/02/09/D-and-I-training' />
 <link rel='replies'        thr:count='8'        type='application/xhtml+xml'        href='/ongoing/When/201x/2019/02/09/D-and-I-training#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2019/02/09/D-and-I-training</id>
 <published>2019-02-09T12:00:00-08:00</published>
 <updated>2019-02-09T16:57:09-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World/Politics' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Politics' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>I went to a two-day â€œD&amp;I workshop for leadersâ€. Many in biz will know what that stands for: Diversity and Inclusion. The people facilitating were <a href='https://www.wmfdp.com/'>WMFDP</a>, which stands for â€œWhite Men as Full Diversity Partnersâ€. Having said that, only one of the two was a white man, and the audience was more gender-diverse than the high-tech norm.  Everyone was senior, there were lots of VPs in the room. It had a strong effect on me.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>I went to a two-day â€œD&amp;I workshop for leadersâ€. Many in biz will know what that stands for: Diversity and
Inclusion. The people facilitating were
<a href="https://www.wmfdp.com/">WMFDP</a>, which stands for â€œWhite Men as Full Diversity Partnersâ€. Having said that, only one of
the two was a white man, and the audience was more gender-diverse than the high-tech norm.
Everyone was senior, there were lots of VPs in the room. It had a strong effect on me.</p>
<h2 id='p-1'>Truths</h2>
<p>In the technology space, we suck at diversity.  Weâ€™re broadly better than average at LGBTQ, probably not far off the mainstream
at Under-Represented Minorities, and terrible at gender.  Tech leadership is by and large aware of the problem, takes it seriously,
and would be very happy if there were a lever they could pull to fix it.  They are investing considerable energy,
including a nontrivial amount of leadership time, a very scarce resource.</p>
<h2 id='p-3'>Reportage</h2>
<p>Iâ€™ve been trying for weeks to figure out my take on the workshop, turn it into a nice narrative with a story arc
and Big Lessons.  That hasnâ€™t worked. But when I went back to review my notes I found a few really resonated.
So what the hell, here are the ones I think worth reading.  Draw your own conclusions.</p>
<p>Some of these are what the facilitators were saying. Some of them are quotes from other people. Some are
me talking to myself.  They start out pretty business-y but get personal.</p>
<ol>
<li><p>We were trying to close a $100M deal, and the customer wanted to see our D&amp;I numbers, including diversity among our
suppliers.</p></li>
<li><p>In hiring, look for â€œReturneesâ€, people whoâ€™ve taken a break and want to come back to work. In
practical terms, these are almost all women whoâ€™ve been doing family caregiving.</p></li>
<li><p>Shortening the list of qualifications in job postings can be useful, because of menâ€™s propensity to be aspirational in
describing their qualifications.</p></li>
<li><p>When we get women into the interview process, we hire them at the same rate as men. So we need to interview more.</p></li>
<li><p>I am the tech business. Iâ€™ve had all the jobs, done all the things. If a diverse population  doesnâ€™t want to join it, Iâ€™m what
they donâ€™t want to join.</p></li>
<li><p>If you look at the Fortune 500â€™s diversity programs, theyâ€™re basically all led by women.  So weâ€™re asking the outsider group
to do all the work of fixing the discrimination against them.  A few white guys running some of these things might not be a terrible
thing.  Thereâ€™s a parallel with husbands who say theyâ€™re happy to help at home but ask their wives to do all the hard emotional/logistical
work.</p></li>
<li><p>The evidence of bias and anti-diversity prejudice is statistically overwhelming, no matter how many individual leaders deny
having it.</p></li>
<li><p>Men will remain indifferent unless they perceive they will benefit from D&amp;I.</p></li>
<li><p>In tech, the bias is present and measurable, but is rarely explicit or intentional, and the people who empirically
<em>must</em> be responsible will hotly deny being part of the problem. (But maybe less so based on attendance at this
exercise?)</p></li>
<li><p>People donâ€™t know how to talk about it. Talking about it is difficult, and thatâ€™s OK.</p></li>
<li><p>Short meetings are a form of discrimination<span class='dashes'>â€‰â€”</span>â€‰shy people donâ€™t get words in.</p></li>
<li><p>This black guy in the sales organization, super senior and successful, says â€œI havenâ€™t told anybody, but Iâ€™ve been keeping
count, in meetings, of black people among the customers at my level. Still havenâ€™t got to ten.â€</p></li>
<li><p>â€œInsider cultureâ€<span class='dashes'>â€‰â€”</span>â€‰individualism<span class='dashes'>â€‰â€”</span>â€‰low tolerance for
uncertainty<span class='dashes'>â€‰â€”</span>â€‰action vs reflection<span class='dashes'>â€‰â€”</span>â€‰rationality
over emotion<span class='dashes'>â€‰â€”</span>â€‰time is linear and future-focused<span class='dashes'>â€‰â€”</span>â€‰status and rank win over
correctness.</p></li>
<li><p>The ultimate privilege is being listened to.</p></li>
<li><p>When I mentor people, should I encourage them to be more like me?</p></li>
<li><p>Who should be teaching about male privilege? Ideally not always women.</p></li>
<li><p>Women say they have to do a <em>lot</em> more thinking before they get their clothes on and walk out the door.</p></li>
<li><p>So disappointed at the times Iâ€™ve heard â€œIâ€™m used to it.â€</p></li>
<li><p>Insiders are identified as individuals, not as members of a group.</p></li>
<li><p>Itâ€™s totally reasonable for outsiders to see me as â€œjust another white guyâ€.</p></li>
<li><p>Itâ€™s not my fault but Iâ€™m responsible.</p></li>
</ol>
<h2 id='p-5'>A conversation</h2>
<p>In one of the exercises, we were in smallish groups and were asked: â€œEveryone look inside themselves and find a dimension along
which youâ€™re an outsider.  Say a few words on what that is and how you feel about it.â€  Wellâ€¦ I came up empty, and said so.  Iâ€™m
white, male, live in the nation where I was born, straight, able-bodied, well-paid, lucky, and have mainstream tastes.</p>
<p>There was a short uneasy silence. Then this smart,
polished, accomplished, person who unlike me is <em>not</em> an insider-on-every-axis looked me in the eye and said â€œSo, why are you
here?â€  The honest truth is Iâ€™m really freaking sick of spending all my time in rooms full of men, so I said that but it felt
unsatisfactory.  I looked for something deeper to say but came up empty.</p>
<h2 id='p-2'>My crazy idea</h2>
<p>I think we in big tech companies should publicly face down our problems, starting with the worst ones.  To start with,
Iâ€™d like us to disclose the actual gender-diversity numbers in our engineering organizations and take a public goal of
changing them, say by 5% over a couple of years, and then disclose the results.</p>
<p>Because hereâ€™s the thing: The people in the management
ranks in big tech are, by and large, pretty smart and resourceful.  Tell them theyâ€™re going to be judged on any given number,
and theyâ€™ll figure out a way to move that number in the right direction.</p>
<p>â€œItâ€™s not my fault but Iâ€™m responsible.â€</p>
</div></content></entry>

<entry>
 <title>Jag Diary 9: Google Mapocalypse</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2019/01/23/I-Pace-UX' />
 <link rel='replies'        thr:count='5'        type='application/xhtml+xml'        href='/ongoing/When/201x/2019/01/23/I-Pace-UX#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2019/01/23/I-Pace-UX</id>
 <published>2019-01-23T12:00:00-08:00</published>
 <updated>2019-01-25T09:31:03-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World/Jaguar Diary' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Jaguar Diary' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>2019 is definitely the year of Linux onâ€¦ the dashboard. This Jaguar is the first car Iâ€™ve owned with a serious infotainment system, and itâ€™s opened my eyes to a few things, one of which might be a real Google vulnerability:  serious competition in the map space.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>2019 is definitely the year of Linux onâ€¦ the dashboard. This Jaguar is the first
car Iâ€™ve owned with a serious infotainment system, and itâ€™s opened my eyes to a few things, one of which might be a real
Google vulnerability:  serious competition in the map space.</p>
<p>Thatâ€™s the main story here, but Iâ€™ll tack on a few random observations about the infotainment system for the Jaguar-obsessed that
have been reading this series.</p>
<h2 id='p-3'>About those mapsâ€¦</h2>
<p>At breakfast on my recent road trip, I got some crud in the socket on my Pixel 2 so Android Auto wouldnâ€™t connect, and I was
looking for a place in Seattle Iâ€™d never been.  So I pulled over and puzzled my way through the Jagâ€™s navigation system; this
required, among other things, setting up a
<a href="https://www.here.com/">Here.com</a> account; This is harder than it should be.  Since I guess the software is mostly
Here.comâ€™s, Iâ€™m going to call these the Here maps.</p>
<p>Here.com
<a href="https://en.wikipedia.org/wiki/Here_(company)">is an interesting story</a>; the old Navteq, they spent some time in the
Nokia portfolio, are now owned by a consortium of car companies and Intel, and now appear in German cars, in Garmin, and at
Bing.</p>
<p>Once I got going, I really liked the Here maps.
The presentation is way prettier than Google via Android auto, with nicely-rendered geography highlights like
buildings and parks.  Also, it keeps your position at the bottom of the screen with the area youâ€™re going in front of you.  Iâ€™m
going to guess that thereâ€™s a way to switch Android Auto maps away from the default mode where North is at the top and much of the
map is filled with area youâ€™ve already traversed, but Iâ€™ve not found it.</p>
<p>The Here maps also make terrific use of the fact theyâ€™re on two screens. Most times, the little screen behind the steering wheel
shows an intelligently-selected subset of the main screen, but then when youâ€™re coming up to a tricky multi-lane corner or freeway
exit, the small screen has a picture showing you which lane you need to be in, or a picture of what the freeway exit sign looks
like.</p>
<img src="https://www.tbray.org/ongoing/When/201x/2019/01/23/IMG_20190122_200642.png" alt="Jaguar I-Pace map display" />
<div class='caption'><p>Pardon the low-res picture; trying to shoot the dashboard while navigating, at night, is not exactly
recommended practice.  Note the lane-choice detail behind the steering wheel.  In this case, the detail readout is also echoed on
the main screen, but sometimes the displays are completely disjoint.</p></div>
<p>As for accuracy, in my small sample size it was fine; there were a couple of odd-feeling routings, but I got where I was going.
Any other criticisms?  The keyboard for entering destinations is sluggish; but then I havenâ€™t tried the voice search, which
apparently is available. Speaking of slow, the nav system is <em>really</em> slow to boot up; youâ€™ll need to wait fifteen seconds or
more after turning the car on before itâ€™s ready to take and give directions.</p>
<p>But when Iâ€™d cleaned out my phoneâ€™s USB (Protip: toothbrush) and Android Auto was working again, I didnâ€™t go back, I stayed
with Here. I wonder which of Google and Here has better information about where the traffic jams are?</p>
<p>Thereâ€™s a widespread perception that Google Maps are unbeatably far ahead; for example check out Justin Oâ€™Beirneâ€™s
<a href="https://www.justinobeirne.com/google-maps-moat">masterful not
to say exaustingly exhaustive drill-downs</a> on the relative merits of Google and Apple maps. But, maybe not.</p>
<h2 id='p-4'>News flash</h2>
<p>In the last couple of months Iâ€™ve switched from Google to DuckDuckGo for my everyday searching, and from Google to Here for
auto navigation.  Iâ€™m wondering if Iâ€™m looking at cracks in the armor.</p>
<h2 id='p-2'>The rest of the stuff</h2>
<p>The Jaguar infotainment software has been panned by several reviewers, who say Tesla and Audi are the gold
standard.  Iâ€™m thinking those guys must be pretty good, because there are a lot of things I like about the
I-Pace UX.</p>
<ol>
<li><p>Multi-screen is good. As I mentioned, you can put the big-screen maps on the little screen, but then you can also put the big
screen audio readout on the little climate-control screen, leaving the big screen free, for maps I guess.</p></li>
<li><p>That audio readout is pretty nice.  I may have abandoned Android Auto maps, but Iâ€™m still spinning tunes through
<a href="https://play.google.com/music/listen?u=0#/home">Google Music</a>, for reasons
<a href="/ongoing/When/201x/2015/08/02/Google-Music">I described in 2015</a>.</p>
<p>It turns out you donâ€™t have to switch over to the Android Auto screens to do that. The Jag infotainment system recognizes Android
Auto as another music source, and will show you what youâ€™re listening to, along with album art, in a visually-pleasing display,
way nicer than Googleâ€™s.</p></li>
<img src="https://www.tbray.org/ongoing/When/201x/2019/01/23/IMG_20190122_201035.png" alt="Jaguar I-Pace music display" />
<li><p>The reviewers particularly griped about the system being laggy.  Yeah, but it just doesnâ€™t bother me.  There are one
or two corners that are <em>really</em> slow, but theyâ€™re fripperies I donâ€™t need.  One thing I do is switch from high-regen for
city streets to low-regen on the highway. There are a couple of routes to get there, involving both swipes and taps.  But neither of
them adds up to more than two or three seconds, and glancing at the road between the steps makes me feel safer.</p></li>
<li><p>Thereâ€™s a â€œfavoriteâ€ button you can assign loads of different functions to (I picked pause/restart audio) and quite a few
other opportunities for customization.
</p></li>
<li><p>Thereâ€™s actually a built-in Web browser. It does a great job of displaying <span class='o'>ongoing</span>, so it must be OK.
Thereâ€™s also some canned news and financial applications, what I believe on a computer weâ€™d call â€œbloatwareâ€.</p></li>
</ol>
<p>That I-Pace cabin, itâ€™s the nicest car interior Iâ€™ve ever spent time in.  And itâ€™s not close.</p>
</div></content></entry>

<entry>
 <title>Jag Diary 8: Road Trip!</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2019/01/22/I-Pace-Range' />
 <link rel='replies'        thr:count='2'        type='application/xhtml+xml'        href='/ongoing/When/201x/2019/01/22/I-Pace-Range#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2019/01/22/I-Pace-Range</id>
 <published>2019-01-22T12:00:00-08:00</published>
 <updated>2019-01-23T22:16:14-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World/Jaguar Diary' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Jaguar Diary' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>Today I drove the new I-Pace 290.3 mostly highway kilometers. In the best online I-Pace community, the top topic, with 1,115 posts as I write, is <a href='https://www.ipaceforums.co.uk/viewtopic.php?f=8&amp;amp;t=409'>I-Pace range</a>.  Because when you come to electric cars, range anxiety is a thing.  Todayâ€™s road-trip report will cover the general highway experience but, since itâ€™s the hot topic, will zero in on range.  Spoiler: You can almost always go 300km without trying too hard.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>Today I drove the new I-Pace 290.3 mostly highway kilometers. In the best online I-Pace community, the top topic, with 1,115 posts as I
write, is <a href="https://www.ipaceforums.co.uk/viewtopic.php?f=8&amp;t=409">I-Pace range</a>.  Because when you come to electric
cars, range anxiety is a thing.  Todayâ€™s road-trip report will cover the general highway experience but,
since itâ€™s the hot topic, will zero in on range.  Spoiler: You can almost always go 300km without trying too hard.</p>
<p>Hereâ€™s the trip.</p>
<img src="https://www.tbray.org/ongoing/When/201x/2019/01/22/Long-leg.png" alt="290.3 km of travel" />
<div class='caption'><p>It was a three-leg trip, from Seattleâ€™s downtown to one of its western neighborhoods, then to SeaTac
airport, then home to Vancouver; only the last (longest) leg is illustrated.  This picture is from the JLR â€œIncontrolâ€ app, which
runs on your mobile and is also a Web site.</p></div>
<h2 id='p-2'>What it feels like</h2>
<p>The I-Pace is a dream on the big highway.  To be fair, this is largely due to it being a
well-built modern car with modern features.</p>
<ol>
<li><p>I think I already mentioned the seats are fabulous, but itâ€™s worth saying again: really great.</p></li>
<li><p>The weather was lousy, between 5Â°C and 8Â°C pretty well the whole way, alternating between drizzle and lashing rain.  The
climate control is actually not as vanishingly perfect as our old 2003 Audiâ€™s, as in sometimes you notice the fans are blowing a
little harder than youâ€™d like on your torso or thighs; easy to correct though.</p></li>
<li><p>The automatic setting on the wipers did the job, shifting from extra-slow intermittent in the drizzle to banginâ€™
â€™em hard in a tractor-trailerâ€™s wake in a downpour.</p></li>
<li><p>The assisted-cruise-control is a treat.  You set a maximum cruising
speed and when thereâ€™s someone in front of you (i.e. almost all the
time) it follows them automatically; the default follow distance gives
you exactly the two-second gap recommended in safety tips.</p>
<p>By the way, I am not remotely interested in any â€œself-drivingâ€ capability that falls short of â€œTim can open up his laptop and do a
code review.â€  Seriously, whatâ€™s the point?</p>
<p>But I think the assisted-cruise makes the highways globally safer at a level related to the number of people using it.</p>
<p>I read at least one reviewer who said the Jagâ€™s assisted-cruise implementation wasnâ€™t up there with the best.  I can believe it;
when a slowpoke pulls out in front of you, the Jag deploys the heavy regen and it can be kind of shocking.  And when you get out from
behind someone whoâ€™s going a whole lot slower than youâ€™ve set the cruise, the Jag decides itâ€™s on a
drag-strip.</p>
</li>
<li><p>On the subject of raw power:
I drove conservatively, assuming that this lurid-blue lightning bolt would be a cop magnet.  But there were a few occasions when I
booted it, for example when asshats tried to dart into my two-second gap, and on one occasion when I realized that I was
about to be seriously in the way of three cars trying to merge from an on-ramp I hadnâ€™t noticed, and there was no room to move over.
Well, tee-hee-hee, there are very few cars in the world that can rocket-launch forward from a starting speed well over 100km/h
the way this does.</p></li>
<li><p>The carâ€™s whisper-quiet around town (so nice) but when youâ€™re doing 70+mph on rough asphalt in a driving rainstorm, itâ€™s not
dramatically quieter than a decent modern fossil car; the tires and all the air and water hitting the car can get in the way if
youâ€™re playing soft music.</p></li>
</ol>
<p>Bottom line: Iâ€™ve driven this route too many times, in a variety of
automobiles, my own and rented.  The I-Pace got me home feeling a really a lot less
stressed and wasted than anything else Iâ€™ve done the trip in.</p>
<h2 id='p-1'>Now, about range</h2>
<p>The wisest thing Iâ€™ve seen on the subject is on the
<a href="https://www.ipaceforums.co.uk/">ipaceforums.co.uk</a> site in
<a href="https://www.ipaceforums.co.uk/viewtopic.php?f=8&amp;t=409&amp;start=1030#p11690">a post</a> by
<a href="https://www.ipaceforums.co.uk/memberlist.php?mode=viewprofile&amp;u=837">DougTheMac</a>.  Itâ€™s worth reading in full, but here are
a couple of excerpts. This point, on how to think about range, is crucial:</p>
<blockquote>
<p>I think thereâ€™s a big difference between the required behaviour on a longer-than-usual trip and a very-long-trip. The difference is because on a road trip, you are reluctant to let the SoC get below maybe 20% in case the charger you are relying on isnâ€™t available and you have to divert. Also, on a road trip, you probably only want to recharge up to 80% because the last 20% is very slow. So, the distance between recharging stops on a very long trip is perhaps 60% of the actual achievable range. </p>
<p>But if you start from home with a full charge and pre-conditioned, and your destination at the end of the day is either home
again or a destination with 100% certainty of an overnight charge, then you can use 95%+ of the battery capacity with reasonable
confidence.</p></blockquote>
<p>Explanatory note on â€œconditioningâ€. You can tell the car what time you plan to depart, and on schedule itâ€™ll get the
cabin all pre-heated for you, and if itâ€™s plugged in, also boost the battery to the correct operating temperature. This is said to
increase range, but I have no idea how much.</p>
<p>Here are his conclusions (for those of us in metric-land, his breakpoints of 100M, 150M, and 190M are around,
respectively, 160km, 240km, and 300km):</p>
<blockquote>
<ul>
<li><p>Trip distance &lt;100M: Charge to 80% (! q.v.), pre-condition, drive to have fun.</p></li>
<li><p>Trip distance &lt;150M: Charge to 100%, pre-condition, drive to have fun.</p></li>
<li><p>Trip distance &lt;190M: Charge to 100%, pre-condition, drive a bit more gently, monitor, but expect to get to destination without a charge en route, albeit perhaps down to &lt;5% on arrival.</p></li>
<li><p>Trip distance 190-310M: Plan for a single en-route charge, ideally from c20% SoC (to give the safety margin required in case
the planned charger is unavailable) but only up to the SoC required to get to the final destination with a minimal SoC (5%?). A
single 20%-80% charge should add 120M (80%-20%=60%x200M), hence 190+120=310M with 5% on arrival at the â€œsafeâ€ destination. But if
you only need an extra 50M, you only put in the required amount to just get you to your safe destination.</p></li>
</ul>
</blockquote>
<p>Like I said at the top: You can go 300km, assuming youâ€™re sure of having a place to charge when you get there. The road to Seattle
is 230km with lots of hills, and there are long stretches where the speed limit is 70mph and everyone cruises at
80.  So while a chilly day like today isnâ€™t the North American worst case<span class='dashes'>â€‰â€”</span>â€‰that would be something like
Canadaâ€™s Rogers Pass in midwinter<span class='dashes'>â€‰â€”</span>â€‰itâ€™s worse than average.</p>
<p>I used the carâ€™s â€œcomfort modeâ€ both ways; itâ€™s got an â€œeco modeâ€ which could probably have done better.
On the trip down I still had 90km of advertised range when I pulled up to a charger in the basement of an Amazon building, which suggests a
total of 320km. Today I went 290.3km at an average speed of 87km/h and had 8% charge when I got home. The car
said it had 26km of range left; do the math.</p>
<h2 id='p-2'>Recharge</h2>
<p>After I unloaded, I headed over to the handy neighborhood fast-charger, where by â€œfastâ€ I mean 50kW.  This is about as close to a
â€œfull chargeâ€ as the Jag is ever likely to get: 78.174 kWh in 2 hours.</p>
<h2 id='p-3'>Conclusion</h2>
<p>Modern battery-electric cars are just fine for medium-long road trips.</p>
</div></content></entry>

<entry>
 <title>Jag Diary 7: I-Pace Over 100</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2019/01/15/I-Pace-Over-100' />
 <link rel='replies'        thr:count='0'        type='application/xhtml+xml'        href='/ongoing/When/201x/2019/01/15/I-Pace-Over-100#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2019/01/15/I-Pace-Over-100</id>
 <published>2019-01-15T12:00:00-08:00</published>
 <updated>2019-01-18T23:00:54-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World/Jaguar Diary' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Jaguar Diary' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>Thatâ€™s over a hundred kilometers of course, which it took three days to achieve. </div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>Thatâ€™s over a hundred kilometers of course, which it took three days to achieve.
</p>
<ol>
<li><p>Iâ€™m enjoying learning how to deploy that electric-Jag power gracefully.  Yeah, you can floor it, which
is shocking if brutish fun and might damage your neck vertebrae. But you know whatâ€™s way sweeter? Coming out of a
corner, or around a slower car, and easing the accelerator down, and then further and further down, <em>smoothly</em>. You canâ€™t do
this for more than a few seconds without being in seriously unlawful territory anywhere this side of the Autobahn, but oh my
goodness those are really very pleasing seconds; the pool of acceleration is bottomless.</p></li>
<li><p>Iâ€™ve had two charging experiences so far (havenâ€™t needed any, just trying to learn the ropes), both from
<a href="https://www.chargepoint.com/en-ca/">ChargePoint</a>, both perfectly smooth. You plug in the big heavy connector, fire up
the app, hold your phone up to the machine, and away it goes.</p>
<p>But Iâ€™m glad Iâ€™m going to have my own charger before the month is over, because the â€œfastâ€ chargers like the one illustrated here
are in demand and not well maintained; of the two in the picture, one is out of order and apparently has been for a couple of
months</p></li>
<img src="https://www.tbray.org/ongoing/When/201x/2019/01/15/IMG_20190117_170440.png" alt="I-Pace at fast charger" />
<img src="https://www.tbray.org/ongoing/When/201x/2019/01/15/IMG_20190117_170532.png" alt="I-Pace, fast charger and its infrastructure" />
<div class='caption'><p>Above, charging in progress; below, another angle. The black box at the right below is supporting infrastructure;
the label on the side says 80A worth of 3-cycle power.</p></div>
<li><p>Thereâ€™ve been stories of people having trouble getting their I-Paces to connect to one charger model or another, but Iâ€™ve
had none on two out of two experiences.  The â€œfast chargerâ€ took me from 86% to 96% full in a half-hour.  (Thatâ€™s 11.26 kWh, or
almost exactly one Canadian dollarâ€™s worth at
<a href="https://app.bchydro.com/accounts-billing/rates-energy-use/electricity-rates/residential-rates.html">residential rates</a>.)
This is not as lame
as it sounds, because the charging speed declines as the battery fills up, notably slowing down past 80%.  Thus, when on
a road trip, itâ€™s considered to be smart and courteous, at a roadside fast-charger, to unplug and go at 80%.</p></li>
<li><p>The turning radius is large, bigger than our old Honda vanâ€™s.  Maybe something to do with the wheels being
pushed out to the corners? This is particularly annoying because any fool can get into the rhythm of jamming a shift-stick back and
forth between Drive/1st and R while three-pointing on a narrow street, but my fingers are nowhere near learning how to hit the Jagâ€™s
D and R buttons without looking.</p></li>
<img src="https://www.tbray.org/ongoing/When/201x/2019/01/15/seat.png" alt="I-Pace car seat adjustments" />
<li><p>Iâ€™m dealing with angst about the seat position; itâ€™s a paradox-of-choice problem, there are just too many
controls.  I may have to go all engineer and take a systematic approach, making one change at a time on one lever at a
time.  I should be clear that itâ€™s a fabulously comfortable seat, itâ€™s just that I canâ€™t prove it couldnâ€™t be better.</p></li>
<li><p>The â€œPark Assistâ€ feature, which has two dedicated buttons, doesnâ€™t work.  Itâ€™s not just me, I
<a href="https://www.ipaceforums.co.uk/viewtopic.php?f=8&amp;t=905">asked my peers</a> and everyone agrees that yeah, itâ€™s just
broken. Shame on Jaguar, other modern cars get this right. I wonder if it can be fixed in software?</p></li>
<li><p>In fact, itâ€™s a good thing that the I-Pace is so much fun to drive, because itâ€™s generally a pain in the ass to park.  The
visibility through the tiny dim near-horizontal back window is laughable, the rear-view camera is a little laggy (great picture
though), and the car is wide.  Iâ€™m sure Iâ€™ll figure out a way to curve into place, reasonably close to and parallel to the curb, but
I havenâ€™t yet.</p></li>
<li><p>Driving my fossil car to work was dumb and this one being electric doesnâ€™t change that.  Parking is still
expensive, as are the L2 chargers in Vancouver office-building basements.</p></li>
</ol>
</div></content></entry>

<entry>
 <title>Jag Diary 3: What We Know</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/07/07/I-PACE-3' />
 <link rel='replies'        thr:count='4'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/07/07/I-PACE-3#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/07/07/I-PACE-3</id>
 <published>2018-07-07T12:00:00-07:00</published>
 <updated>2019-01-16T21:15:07-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World/Jaguar Diary' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Jaguar Diary' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>Between June 4th, when the first wave of reviews of the New Jag hit (offically the I-PACE, what a dumb name) and the time the salesman called me saying â€œTime to sign the order if you want to be in the first waveâ€, I had to decide whether to spend a lot of money on a car Iâ€™d never seen or touched.  So I paid damn close attention to those reviews. Iâ€™m a critical reader, and suspicious about the motives of product reviewers, and I think the picture that emerges is pretty clear.  This post is to enumerate what I think itâ€™s possible to know for sure about the car without having owned or even driven one. <i>[Updated based on hands-on experience.]</i></div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>Between June 4th, when the first wave of reviews of the New Jag hit (offically the I-PACE, what a dumb name) and the time the
salesman called me saying â€œTime to sign the order if you want to be in the first waveâ€, I had to decide whether to spend a lot of
money on a car Iâ€™d never seen or touched.  So I paid damn close attention to those reviews. Iâ€™m a critical reader, and suspicious
about the motives of product reviewers, and I think the picture that emerges is pretty clear.  This post is to enumerate what I think itâ€™s
possible to know for sure about the car without having owned or even
driven one. <i>[Updated based on hands-on experience.]</i></p>
<p>Iâ€™ll throw in a bunch of links down at the bottom to reviews that I think are particularly useful.</p>
<h2 id='p-1'>Facts</h2>
<ul>
<li><p>The story starts in 2014, when Jag leadership decided to go all-in on a from-scratch electric model.  They put an integrated
development team all in one room at the University of Warwick<span class='dashes'>â€‰â€”</span>â€‰not exactly traditional auto-biz
practice<span class='dashes'>â€‰â€”</span>â€‰and eventually brought the new car from nothing to market in â€œonlyâ€ four years, which is
considered very good in that industry.</p></li>
<li><p>It has two motors, one wrapped round each axle, with the space between full of battery, then the cabin perched on
top. At moderate speeds, only the back wheels drive.</p></li>
</ul>
<img src="underneath.png" alt="Underneath" />
<ul>
<li><p>Itâ€™s almost all aluminium and, despite that, is still super-heavy (2100kg), mostly because of the battery.</p></li>
<li><p>Iâ€™m not going to recite horsepower and torque numbers that I donâ€™t understand, but people who do understand them sound
impressed.</p></li>
<li><p>I donâ€™t understand charging issues well enough to have an intelligent opinion, but
<a href="https://twitter.com/llsethj">Seth Weintraub</a> does, and
<a href="https://electrek.co/2018/06/14/jaguar-i-pace-review-the-240-mile-luxury-sport-utility-is-everything/">his review</a> is
full of useful detail. Tl;dr: The range is competitive with other high-end electrics.</p></li>
<li><p>It doesnâ€™t have gears as such, just buttons: P, N, R, D.  The North American edition comes only with air suspension, and has
a thing where you can elevate the car for a tricky driveway or rutted gravel, and it settles down automatically at high
speeds. I gather the Euro model can be bought with springs.</p></li>
<li><p>Another difference: The Euro model comes with either a standard or glass roof; in the New World itâ€™s all-glass all the time.
Personally, Iâ€™d prefer a layer of metal between me and the sun, but they claim itâ€™s sufficiently shaded and
UV-impervious.</p></li>
<li><p>Electrics are super quiet inside so, if you want, the Jag will play you a spaceship-y acceleration sound that changes with
the speed. Fortunately itâ€™s optional; although one of the journos who took it out on the racetrack said he found it useful in
situations where you donâ€™t have time to look at the speedometer.</p></li>
<li><p>Thereâ€™s a screen behind the steering wheel where you can display speed and charge and maps and so on.  Front center, thereâ€™s
a biggish (but not Tesla size) screen above for Infotainment, and a smaller one below for climate control.  On the subject of
climate control, the console has a couple of actual physical knobs for that.</p></li>
</ul>
<img src="black-interior.png" alt="Black interior" />
<img src="white-interior.png" alt="White interior" />
<ul>
<li><p>Itâ€™s got a fair-size trunk at the back (the back seats fold down 60/40) and a tiny one under the front hood; someone
suggested it was just big enough to carry your cat.</p></li>
<li><p>As with most electrics, you can do one-pedal driving, where easing off the accelerator goes into regeneration mode and
provides enough breaking for all but exceptional circumstances.</p></li>
<li><p>You can actually take it off-road, up and down stupidly steep hills, through really deep puddles, and so on: The â€œLRâ€ part of
JLR is Land Rover, and that part of the company knows something about those things.</p></li>
<li><p>Thereâ€™s plenty of room inside for four big adults. The person in the middle of the back seat should be on the small
side.</p></li>
<li><p>Nobody has seen either Apple CarPlay or Android Auto at work, but the company claims that both will be supported.  My own Jag
dealer said heâ€™d heard that theyâ€™d done the technology work were just doing licensing and payment. <i>[Hands-on: It works fine!]</i></p></li>
<li><p>It has a SIM slot and over-the-air software update.</p></li>
<li><p>You can equip it with a tow-bar and bike-rack and roof-rack.</p></li>
<li><p>Itâ€™s built, not by JLR themselves, but by
<a href="https://en.wikipedia.org/wiki/Magna_Steyr">Magna Steyr</a>, a contract manufacturer in Graz, Austria, that also builds
the Mercedes G-Class and BMW 5 Series.</p></li>
</ul>
<h2 id='p-2'>Things that are good</h2>
<ul>
<li><p>Everyone agrees that itâ€™s a blast to drive.  Whatâ€™s interesting is that the most common comment was â€œfeels just like a
Teslaâ€. The <cite>Top Gear</cite> scribe pointed out, in a melancholy tone, that apparently all electric motors feel more or less
like all others.  This is a big change from the days of
internal-combustion engines, which have all sorts of personality.  Itâ€™s fast, maneuverable, and comfortable.
<i>[Hands-on: Oh yeah!]</i></p></li>
<li><p>The one-pedal driving mode takes a bit of getting used to but all the journos ended up loving it, and assuming that pretty
everyone would use it all the time.</p></li>
<li><p>The seats are said to be super-comfortable. <i>[Hands-on: Yup.]</i></p></li>
<li><p>It has all the bells and whistles and technology gadgets anyone could want.</p></li>
<li><p>The cabin has all sorts of storage space in bins here and there and under the back seats and so on.</p></li>
<li><p>It has more than enough range for people who drive around town and then occasionally go 200+ km for business.</p></li>
</ul>
<h2 id='p-4'>Things that are not so good</h2>
<ul>
<li><p>If youâ€™re a road warrior, Jag doesnâ€™t have anything to compete with Teslaâ€™s supercharger network.  Iâ€™ve started poking around
<a href="https://www.plugshare.com/">PlugShare</a> and
<a href="https://www.chargepoint.com/en-ca/">ChargePoint</a> and so on, and I think you could manage road trips, but itâ€™s not going
to be as slick as with a Tesla. Perhaps this situation will improve?</p>
<p>Me, I have a carport on the back alley and Iâ€™ll put in a charger and I should be fine.</p></li>
<li><p>The infotainment system is slow and laggy, and some important settings are deeply nested into the menus.
Android Auto is my answer to that. <i>[Hands-on: The lag is not really an irritant once you get into the systemâ€™s rhythm but yeah,
the menus could be better-organized.]</i></p></li>
<li><p>The storage space isnâ€™t that well-organized and itâ€™s not obvious where to stow the charging cables.</p></li>
<li><p>The fifth person in the car is going to be kind of cramped.</p></li>
<li><p>Visibility out the back window is lousy, with big rear posts getting in the way. <i>[Hands-on: The window is tiny, nearly
horizontal, and shaded, so the view is ludicrously bad.  Thereâ€™s a back-up camera to help with parking though.]</i></p></li>
<li><p>The brake pedal tries to combine regenerative and friction braking and as a result is said to feel soft and weird.
<i>[Hands-on: Donâ€™t know what was bothering them, my leg likes it fine.]</i></p></li>
<li><p>The air-suspension ride has been reported as feeling a bit jittery and unstable at low/moderate speeds.
<i>[Hands-on: Nope, but Iâ€™ve found the regen braking can be a bit quease-inducing for passengers while driving in traffic.]</i></p></li>
<li><p>The center console crowds the driverâ€™s leg a bit; more of a problem in left-hand drive vehicles, obviously.
<i>[Hands-on: Not at all, thereâ€™s plenty of room for my legs, and Iâ€™m 5â€™11".]</i></p></li>
</ul>
<h2 id='p-6'>My conclusion</h2>
<p>What happened was, when the first buzz of publicity hit in March I was interested enough to drop by
<a href="https://www.jaguarvancouver.ca/en">Vancouver Jaguar</a> and talk to Caleb Kwok, the sales manager. Heâ€™s a plausible guy,
responsive to email, and anyhow, he convinced me to put down a refundable deposit, buying me a place near the front of the
line at the time actual orders would open up.  Which turned out to be last week.</p>
<p>By which time Iâ€™d read all the material summarized in this piece.  On balance, I liked what I heard; the pluses were pretty big
and none of the minuses bothered me that much. Remember, the longest trip I normally take is 230km to Seattle, where I park for a
couple of days then drive home.</p>
<p>So I signed on the dotted line, and my deposit is no longer refundable.</p>
<p>The big worry, of course, is reliability and manufacturing quality.  Jaguar, at various times in its history, has had a miserable
reputation.  Of one famous model, they used to say â€œItâ€™s a great car, so buy two, because one will always be in the shop.â€  Itâ€™s
worse than that; Jag at one point had a particularly stinky track record around electrical systems.</p>
<p>But there are stats suggesting Jagâ€™s doing better in recent years. And then thereâ€™s the fact that itâ€™s being built in a plant where
they also make Mercedes and BMW.  Granted, Iâ€™m taking a chance here.</p>
<h2 id='p-5'>Helpful reviews</h2>
<ul>
<li><p><a href="https://arstechnica.com/cars/2018/06/forget-about-that-tesla-the-jaguar-i-pace-is-the-most-compelling-ev-yet/">Forget about that Teslaâ€”the Jaguar I-Pace is the most compelling EV yet</a>
at <cite>Ars Technica</cite>.</p></li>
<li><p><a href="https://www.engadget.com/2018/06/14/2019-jaguar-ipace-review/">Jaguar I-Pace review: A luxury EV that can tackle anything</a>
at <cite>Engadget</cite>.</p></li>
<li><p><a href="https://www.topgear.com/car-reviews/jaguar/i-pace">The Top Gear car review: Jaguar I-Pace</a> at <cite>BBC Top Gear</cite>.</p></li>
<li><p><a href="https://www.edmunds.com/car-news/first-impressions/2019-jaguar-i-pace-first-drive.html">2019 Jaguar I-Pace First Drive</a>
at <cite>Edmunds</cite>.  By the way,
Edmundsâ€™
<a href="https://www.edmunds.com/car-reviews/long-term-road-tests/">Long-Term Road Tests</a>  are the gold standard in automotive
reportage.  Iâ€™m sure theyâ€™ll onboard one of the new Jags and if youâ€™re thinking â€œmaybeâ€, I strongly advise watching out for
that.</p></li>
<li><p><a href="https://www.motortrend.ca/en/news/2019-jaguar-i-pace-review-london-to-berlin-electric-jag/">2019 Jaguar I-PACE Review: From
London To Berlin In An All-Electric Jag</a> at <cite>Motor Trend</cite>.</p></li>
<li><p><a href="https://www.youtube.com/watch?v=FILPOpickH4">Jaguar I-Pace SUV 2019 in-depth review | Mat Watson Reviews</a> at
<cite>CarWow</cite><span class='dashes'>â€‰â€”</span>â€‰this is the most negative
review I ran across, and really highlights all the places where the new Jag could have been better.</p></li>
</ul>
</div></content></entry>

<entry>
 <title>Jag Diary 6: I-Pace Day Two</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2019/01/14/I-Pace-Day-2' />
 <link rel='replies'        thr:count='3'        type='application/xhtml+xml'        href='/ongoing/When/201x/2019/01/14/I-Pace-Day-2#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2019/01/14/I-Pace-Day-2</id>
 <published>2019-01-14T12:00:00-08:00</published>
 <updated>2019-01-15T18:19:08-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World/Jaguar Diary' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Jaguar Diary' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>No highways were harmed in the preparing of this blog fragment; our new I-Pace is for the moment an urban runabout.  In town, it doesnâ€™t get you anywhere faster than a Honda Fit or 20-year old Ford Focus would. But those burn fossil fuels and we should all try to stop doing that.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>No highways were harmed in the preparing of this blog fragment; our new I-Pace is for the moment an urban runabout.  In town, it
doesnâ€™t get you anywhere faster than a Honda Fit or 20-year old Ford Focus would. But those burn fossil fuels and we
should all try to stop doing that.</p>
<p><i>[Yes, I said I was going to do live updates to Sundayâ€™s
<a href="/ongoing/When/201x/2019/01/13/My-I-Pace">Green Light</a> piece, but that turns out to be annoying. Sorry.]</i></p>
<img src="https://www.tbray.org/ongoing/When/201x/2019/01/14/IMG_20190113_202700.png" alt="Jaguar projection"/>
<div class='caption'><p>The door handles are flush when parked, but slide out when you unlock.
When you unlock at night they glow and project, absurdly albeit with decent kerning,
on the adjacent pavement.</p></div>
<ol>
<li><p>I originally wanted to get white paint because I unhealthily loved the red-leather-seats option and thought the
white/red combo was cool.  And I still think so, but Iâ€™m glad Lauren convinced me to go for
<a href="https://duckduckgo.com/?q=caesium+blue&amp;atb=v147-4__&amp;iax=images&amp;ia=images">Caesium Blue</a>.  Itâ€™s a lovely color,
lighter than it seems in online pictures.</p>
<p>I was afraid the blue/red would look kind of garish but now that Iâ€™ve seen it I donâ€™t
care. If I worried about that kind of thing I wouldnâ€™t buy a Jaaag, right?  I do wish they offered a nice forest green
though.</p></li>
<li><p>Itâ€™s dead cool to pull out your phone, pop open the carâ€™s remote-control app, and set the internal climate to 20Â°C
ten minutes before you go out to drive somewhere on a Canadian winter night.</p></li>
<li><p>The headlights have autonomic voodoo; they click into high-beam mode when they think nobodyâ€™s in front of you
(correctly, so far) and apparently try to point away from the eyes of drivers in oncoming lanes.</p></li>
<li><p>Yeah, the infotainment screen navigation is kinda klunky and slow, and the menu tree isnâ€™t the most intuitive thing.
But itâ€™s not <em>that</em> big.</p>
<p>I found that within a day, I had perfected a leisurely wave gesture, somewhat in the style of a Tai Chi master or opium
smoker, and achieved menu mastery.</p></li>
<li><p>When I plugged in my Pixel 2, Android Auto initially coughed and belched, but the kinks worked
themselves out and itâ€™s now a first-class citizen of the big middle screen.  Itâ€™s kind of cool having Google maps on the big screen
and Jagâ€™s own maps, which are more eyecandyful, up on the â€œinstrument
panelâ€ screen behind the steering wheel.</p></li>
<img src="https://www.tbray.org/ongoing/When/201x/2019/01/14/IMG_20190115_081506.png" alt="Jaguar I-Pace screens including Google Play" />
<div class='caption'><p>Aesthetics by Jaguar on the left, by Google on the right.</p></div>
<li><p>Prior to buying the car, Iâ€™d blown off negative comments on its infotainment app by saying â€œwho cares, Iâ€™m going
to use software from a software company.â€  But I have to say that the general presentation of the Jag software on Jagâ€™s screens is
prettier than Android manages. Thereâ€™s been attention to typography, there are tonal gradients in the background, and so on.</p>
<p>Having said that, it doesnâ€™t have my 13,096 songs in the cloud like Google does, and doesnâ€™t know what â€œOK Google, text Laurenâ€
means, nor â€œOK Google, Calgary weather.â€ </p>
<p>Iâ€™m not actually sure what outcome Iâ€™d like to see on this one.</p></li>
<li><p>The user manual is available as a
<a href="https://play.google.com/store/apps/details?id=com.jaguar.iguideapp&amp;hl=en_us">mobile app</a>; the Android version gets
horrible reviews mostly because it only covers a couple of Jaguar models. Itâ€™s actually not bad, with a search function and visual guide
and rich hyperlinking.  Thereâ€™s also a PDF version online at
<a href="http://www.ownerinfo.jaguar.com/">ownerinfo.jaguar.com</a>, and then when you get the car thereâ€™s a hefty slab of dead
trees in the glovebox.</p>
<p>However, all of these are sadly incomplete in their coverage.  For example: The car comes with a feature where you can have it
play whooshy spaceship crescendos as you accelerate, to help petrol-heads who are missing that fossil-combustion roar. No form
of the manual told me where in the menus it was hiding. OK, I was trying to impress a 12-year-old, but still.</p>
<p>Also, I wanted to fool with the instrument panel display, which has many modes.  The manual is full of English
sentences that have subjects and verbs and objects but somehow failed to map, in my mind, to what I was seeing on the carâ€™s
screens. I appreciated the advice Iâ€™d picked up in the online Jaguar community, which is that this wisdom is best consumed with the
help of a couple of glasses of the Famous Grouse. So I went and bought some, but there are lots better Scotches and it didnâ€™t help
<em>that</em> much.</p></li>
<li><p>Oh right, online communities.  The best for my money is at
<a href="https://www.ipaceforums.co.uk/">ipaceforums.co.uk</a> although, as the name suggests, itâ€™s Euro-heavy.  Thereâ€™s also
<a href="https://www.i-paceforum.com/">i-paceforum.com</a> (note the hyphen) but itâ€™s not as good.  On Reddit thereâ€™s
<a href="https://www.reddit.com/r/jaguar">r/jaguar</a> and the still-embryonic
<a href="https://www.reddit.com/r/ipace">r/ipace</a>.</p></li>
<li><p>Iâ€™ve signed the car into the home WiFi network and turned
mobile data on.  It came with an AT&amp;T Canada SIM and despite several pleading emails from AT&amp;T, I have no idea what that does.  It
was already network-connected somehow because the remote-control app tells me where it is and how charged it is and lets me do
things like turn on the heating inside.</p>
<p>I also turned network updates on, and noticed that the software is a couple releases behind the latest.
More investigation is <em>definitely</em> required.</p></li>
<li><p>Speaking of apps and suchlike, someone is
<a href="https://github.com/ardevd/jlrpy">building a Python library</a> to talk to the I-Paceâ€™s API, and making good progress.
There are lots of interesting APIs, many of which Jaguarâ€™s remote-control app doesnâ€™t use. Hmmmâ€¦</p></li>
</ol>
<p><i>[Life lesson: A really good time to write about something is while youâ€™re learning about it. I learned this from Mark Pilgrim
and if youâ€™ve never heard of him thatâ€™s
OK (if sad).]</i></p>
</div></content></entry>

<entry>
 <title>Jag Diary 5: The Green Light</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2019/01/13/My-I-Pace' />
 <link rel='replies'        thr:count='2'        type='application/xhtml+xml'        href='/ongoing/When/201x/2019/01/13/My-I-Pace#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2019/01/13/My-I-Pace</id>
 <published>2019-01-13T12:00:00-08:00</published>
 <updated>2019-01-13T16:59:34-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World/Jaguar Diary' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Jaguar Diary' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>I picked up the new family wheels, a 2019 <a href='https://en.wikipedia.org/wiki/Jaguar_I-Pace'>Jaguar I-Pace</a>, on January 12th.  Current plans are for this blog fragment to get updates for the next couple of weeks, through a planned road trip, per the â€œdiaryâ€ part of the series title.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>I picked up the new family wheels, a 2019
<a href="https://en.wikipedia.org/wiki/Jaguar_I-Pace">Jaguar I-Pace</a>, on January 12th.  Current plans are for this blog fragment
to get updates for the next couple of weeks, through a planned road trip, per the â€œdiaryâ€ part of the series title.</p>
<h2 id='p-2'>The wait</h2>
<p>Iâ€™d reserved a spot in March and ordered the
car in July, so itâ€™s been a wait, and Iâ€™ve been in a sort of Gatsby-and-the-green-light mode.  Itâ€™s not as simple as expectations
being high, although the carâ€™s
<a href="https://en.wikipedia.org/wiki/Jaguar_I-Pace#Awards">won loads of awards</a>; the early shipments have
<a href="https://www.ipaceforums.co.uk/viewforum.php?f=11&amp;sid=616ddf0c1b89a313c4b3aa32405434a8">not been problem-free</a>,
and the car has picked up a legion of haters<span class='dashes'>â€‰â€”</span>â€‰chiefly
<a href="https://finance.yahoo.com/quote/TSLA">$TSLA</a> longs, but still.</p>
<h2 id='p-4'>JLR fail</h2>
<p>During the 5-month wait for the car, the number of times Jaguar contacted me: zero.  The number of status updates they gave
me: zero. The typical delay when I emailed asking what was up: Days.  Mind you, I was dealing with salespeople and,
from their point of view, the sale was already made.</p>
<p>Maybe Iâ€™m just dealing with a particularly lame salesperson or dealership, but in the event that I want to consider another
JLR product, you can bet I am <em>not</em> going back to
<a href="https://www.jaguarvancouver.ca/en">Jaguar Vancouver</a> and I wouldnâ€™t particularly recommend them.</p>
<p>In fairness, they handled the Big Day processes of paperwork shuffling, insurance coverage, taking my money, getting the
<a href="https://play.google.com/store/apps/details?id=com.jaguar.incontrolremote&amp;hl=en">remote-control app</a> set up,
and explaining the carâ€™s workings, with perfect competence.</p>
<img src="https://www.tbray.org/ongoing/When/201x/2019/01/13/IMG_20190112_141008.png" alt="Jaguar I-Pace close-up" />
<h2 id='p-1'>About as expected</h2>
<p>First important finding: If youâ€™ve been tracking the online traffic about the I-Pace, which I summarized in
<a href="/ongoing/When/201x/2018/07/07/I-PACE-3">Jag Diary 3: What We Know</a>, getting in the car and driving it around wonâ€™t
present that many surprises.  It is more or less what it says on the box, and what the Internet said about the box.</p>
<p>So Iâ€™m going to try to restrict myself in this space to findings that are new or refreshing or surprising, which probably means
of specific relevance to those who are some combination of Pacific Northwesterners, Internet geeks, urban dwellers,
environmentalists, and parents of teenagers.</p>
<img src="https://www.tbray.org/ongoing/When/201x/2019/01/13/Journey-1.png" alt="Journey 1" class="inline"/>
<h2 id='p-3'>Day 1 impressions</h2>
<p>We picked up the car in the morning, then drove from Vancouver down to Steveston for lunch, then back home with stops for
photography and shopping. To the right, the Journey graphic
from the I-Pace remote app, which gets scathing reviews on Google Play.</p>
<ol>
<li><p>Itâ€™s smaller than youâ€™d think.  My carportâ€™s still under construction so the Jagâ€™s parked on the street in front of the house, and
itâ€™s not one of the larger cars along the block.  The contrast between small outside and spacious inside is shocking.</p></li>
<li><p>Itâ€™s nimble!  That electric-motor acceleration is awesome; Unless youâ€™ve stomped the accelerator in a Tesla or I-Pace you
just canâ€™t imagine what it feels like.  But in practice, it means that if youâ€™re trying to get out of the supermarket parking lot across
a couple lanes of oncoming traffic you can Just Do It, it feels like teleportation.</p></li>
<li><p>The seats are just awesomely comfortable<span class='dashes'>â€‰â€”</span>â€‰I sprung for the upscale-but-not-racing level, with
some huge number of adjustments, and it feels like Iâ€™m being cradled by a huge warm benevolent being.</p></li>
<li><p>The Meridian audio, at first listen, is underwhelming, the bass sounding unnaturally light to my ears. Will report back
after further adjustment.</p></li>
<li><p>The regen braking is fun, but when Lauren was driving and I was passenging, I found it a little uncomfortable.  Perhaps a
combination of us developing better one-pedal driving skills and passengers just getting used to it will change this finding.
But in the online I-Pace forums, a lot of people are recommending low-regen for comfort, especially on the highway.</p></li>
<li><p>Lauren, whoâ€™s 5â€™5" with a light build, found the driving position perfectly comfortable and loved the handling.
Sheâ€™s right<span class='dashes'>â€‰â€”</span>â€‰this car <em>loves</em> to warp around a corner at speed.</p></li>
<li><p>Parking takes some getting used to. It has lots of sensors and alarms which moan piteously if you get anywhere near the curb
or cars fore and aft.  My first attempt left it halfway out in the street, and crooked.</p></li>
</ol>

</div></content></entry>

<entry>
 <title>Oil Fail</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2019/01/06/Oil-Fail' />
 <link rel='replies'        thr:count='5'        type='application/xhtml+xml'        href='/ongoing/When/201x/2019/01/06/Oil-Fail#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2019/01/06/Oil-Fail</id>
 <published>2019-01-06T12:00:00-08:00</published>
 <updated>2019-01-06T23:45:53-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World/Environment' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Environment' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Business' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Business' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>Today I learned things that I think every environmentalist and investment manager should know: A coherent argument that we are more or less at Peak Oil. Not the Nineties version, which worried that we might be running out of fossil fuels, but rather that global human petroleum demand is about at its all-time peak and about to start drifting down.  Some of the key data points involve electric cars, which I care a lot about, and China, which is always interesting.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>Today I learned things that I think every environmentalist and investment manager should know: A
coherent argument that we are more or less at Peak Oil. Not the Nineties version, which worried that we might be running out of
fossil fuels, but rather that global human petroleum demand is about at its all-time peak and about to start
drifting down.  Some of the key data points involve electric cars, which I care a lot about, and China, which is always interesting.</p>
<p>The effects are likely not enough to avert the oncoming global-warming disaster, but there are grounds for optimism about reducing its
devastation.
However, this will very likely tear the guts out of the global petroleum business.</p>
<img src="Gregor-Tweet.png" alt="Tweet thread" />
<p>What happened was, I ran across an
<a href="https://twitter.com/GregorMacdonald/status/1082018027967664128">interesting Twitter thread</a> starting with the bold claim
that the internal combustion engineâ€™s future had been killed and that the coming energy transition would pay for itself.  It was compelling
and I gave it a retweet, noting that people who live in an environmentalist-green bubble (for example, me) need to be
skeptical about things that weâ€™d like to be true.  And so we should. </p>
<p>But I was intrigued enough to buy a 105-page PDF called <cite>Oil Fall</cite>; you
<a href="https://gumroad.com/terrajoule">can too, for $9</a>, from its author
<a href="http://gregor.us/">Gregor Macdonald</a>.  If you care about these subjects, you should.
I sure enjoyed it.</p>
<p>(If you buy it: While you <em>can</em> read it on a Kindle, donâ€™t try, the typeâ€™s too small. It might be OK on an iPad.
Or you can just pop it open in
Preview on a Mac or whatever the Windows equivalent is.  Itâ€™s nicely typeset and illustrated; the print isnâ€™t dense and the 105 pages
go by fast.)</p>
<img src="Oil-Fail-Cover.png" alt="Oil Fall by Gregor Macdonald" />
<p>The larger stories<span class='dashes'>â€‰â€”</span>â€‰of the increasingly-threatening specter of climate change, and the growing
viability of renewable energy<span class='dashes'>â€‰â€”</span>â€‰arenâ€™t new at all.  But thereâ€™s one piece of new news: The shocking surge of
Electric Vehicles (hereinafter EVs) in China in 2018, concurrent with a <em>decline</em> in overall vehicle sales there. Probably 1.2
million or so EVs were sold, surging to comprise 7% of all sales toward the end of the year.  Here are a couple of instructive
links:
<a href="https://cleantechnica.com/2018/11/03/china-has-record-electric-car-sales-month-china-electric-car-sales-report/">CleanTechnica</a>
and
<a href="https://qz.com/1492452/car-sales-in-china-are-slowing-but-sales-of-electric-vehicles-evs-continue-to-grow/">Quartz.com</a>.</p>
<p>The argument in <cite>Oil Fall</cite> spends a lot of time on electric cars, since they are at a point of surprisingly high leverage in the
global energy economy.</p>
<p>Iâ€™m not going to replicate the <cite>Oil Fall</cite> narrative, but hereâ€™s a quick sort-of outline.</p>
<ol>
<li><p>Los Angeles as a case study in EV adoption. Itâ€™s not the US leader (thatâ€™d be the Bay Area) but itâ€™s got huge
leverage.</p></li>
<li><p>The politics and economics of renewable energy in California and across the US.</p></li>
<li><p>The special leverage of the EV on the energy economy.</p></li>
<li><p>The structure of Chinaâ€™s (historically coal-dominated) energy economy.</p></li>
<li><p>Why China is crucial to the future price of fossil fuel</p></li>
<li><p>The timing of the peak in global oil demand.</p></li>
<li><p>Efficiencies and inefficiencies in fossil and renewable energy sources.</p></li>
<li><p>The issue of energy storage.</p></li>
<li><p>Economic cost of transition to renewables; estimates have been around 2% of GDP, but Macdonald thinks itâ€™ll be closer to
zero, or even negative. Thatâ€™s what Alexandria Ocasio-Cortez and the young US progressives are arguing with their â€œGreen New Dealâ€
proposal.</p></li>
<li><p>Global-warming prospects.</p></li>
</ol>
<h2 id='p-4'>On the writing</h2>
<p>I donâ€™t know much about Macdonald. His resume sounds respectable, and I quote: â€œHe has written for <cite>Nature</cite>, <cite>The Economist
Intelligence Unit</cite>, <cite>The Financial Times</cite> of London, <cite>The Harvard Business Review</cite>, Atlantic Mediaâ€™s
<cite>Route Fifty</cite>, <cite>The Petroleum
Economist</cite>, and <cite>Talking Points Memo</cite>.â€</p>
<p>The text is well-supplied with numbers and supporting infographics. He is careful to address,
for each key point, the objections to his reasoning and alternative scenarios that arise in the case that heâ€™s wrong.
I didnâ€™t check his numbers exhaustively, but every one of those that I did try to verify checked out.</p>
<p>The style is that of a professional journalist: Not colorful but extremely clear, readable, and full of named real-world
examples illustrating his arguments.</p>
<p>Iâ€™m going to dig a little deeper into a couple of points that were new to me and resonated.</p>
<h2 id='p-5'>On EVs and storage</h2>
<p>Anybody whoâ€™s a renewable-energy fan needs to have thought a lot about energy storage. The sun only shines during the daytime and
sometimes even prevailing winds donâ€™t blow.  Macdonald goes deep on the subject, and offered a pretty compelling argument that there
are plausible market-driven solutions to meet storage needs.</p>
<p>One part of the argument involves electric cars, and is obvious once you think of it.  Planet-wide, we are now building millions
per year, and every one is built around a battery ranging in capacity between 20 and 90KWh.  Do some multiplication and you get a
damn big energy-storage capability, made up of a huge number of independently-owned consumer products. They arenâ€™t terribly fussy what time of
day you charge them, they are network-connected, and managing the network to charge them when the capacity is most available
feels like a straightforward application of the sort that I work on every day.</p>
<h2 id='p-6'>On EVs and negawatts</h2>
<p>That term â€œnegawattâ€ was coined way back in 1985 by
<a href="https://en.wikipedia.org/wiki/Amory_Lovins">Amory Lovins</a>, one of the original big energy-policy thinkers.  He did
the math and showed that the cheapest way to get more power while doing less damage was simply to cut waste.  And itâ€™s worked: Our
houses are better insulated now, our cars get more mileage, and our appliances run cooler and smarter.</p>
<p>But the global energy-efficiency picture is still terrible.  The whole fossil-combustion ecosystem wastes something in the
neighborhood of 50% of the available energy.  Itâ€™s not uniform: For example, a modern natural-gas based generator wastes less. But
internal-combustion vehicles waste a lot more, even today the figure is in
the 70%-wasted range.</p>
<p>EVs, on the other hand, turn electrons into kilometers at an efficiency well over 90%.  Of course, that
doesnâ€™t help if youâ€™re using
electricity that was generated in a fossil-fueled plant; but traveling in a renewable-fed EV is a rich source of negawatts.</p>
<p>To quote Macdonald: â€œBut, the loss is quite a bit worse with every gallon of petrol poured
into an internal combustion engine. Indeed, if your goal was to waste
as much energy as possible, you could do no better than to feed
gasoline into a billion vehicles, each with their own separate engine,
with multiple surfaces from which heat can rise.â€</p>
<h2 id='p-8'>Is oil over?</h2>
<p>Of course not, donâ€™t be silly.  Everyone agrees that coal is â€œoverâ€ and yet its usage hasnâ€™t plummeted, itâ€™s just been drifting down
for a long time, with a temporary spike as China industrialized.  Petroleum remains useful in a huge number of industrial chemical processes,
and in certain particularly energy-intensive transportation applications, like heavy trucks and probably almost all aviation.
We donâ€™t need to stamp out oil to save the planet, just burn less.</p>
<p>My own particular guess is that natural gas is going to be strategic. Itâ€™s relatively energy-dense, straightforward to extract
and transport, and carbon-light; it feels like a good fit for filling in
renewable-energy gaps.</p>
<h2 id='p-7'>On investing</h2>
<p>Thereâ€™s a trend where â€œethical investorsâ€ try to steer capital away from the petroleum industries, and I broadly
approve, mostly due to fear of climate change. But if Macdonald is right (and heâ€™s pretty convincing) this is also a good way to
remove a major source of risk from your portfolio.</p>
<p>Donâ€™t say I didnâ€™t warn you.</p>
</div></content></entry>

<entry>
 <title>Serverlessness</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/12/09/Serverlessness' />
 <link rel='replies'        thr:count='3'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/12/09/Serverlessness#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/12/09/Serverlessness</id>
 <published>2018-12-09T12:00:00-08:00</published>
 <updated>2018-12-30T17:39:17-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology/Cloud' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Cloud' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>I work in AWSâ€™s Serverless group, and in the process of pulling together my  <a href='https://www.youtube.com/watch?v=IPOvrK3S3gQ'>presentation at re:Invent</a>, discovered that I have a lot of opinions on the subject and, while they may well be wrong, are at least well-informed.  You can watch that YouTube, but whoâ€™s got an hour to spare? And anyhow, bloggingâ€™s really my favorite medium, so here we go.  If I tried to glom them all together into one mega-essay itâ€™d be brutally long, so letâ€™s go short-form.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>I work in AWSâ€™s Serverless group, and in the process of pulling together my
<a href="https://www.youtube.com/watch?v=IPOvrK3S3gQ">presentation at re:Invent</a>, discovered that I have a lot of opinions on the
subject and, while they may well be wrong, are at least well-informed.  You can watch that YouTube, but whoâ€™s got an hour to spare?
And anyhow, bloggingâ€™s really my favorite medium, so here we go.  If I tried to glom them all together into one mega-essay itâ€™d be
brutally long, so letâ€™s go short-form.</p>
<h2 id='p-3'>The Serverless Fragments</h2>
<p>â€œServerless Fragmentâ€ has five syllables and <span class='o'>ongoing</span> doesnâ€™t have that much room at the top of the page
for the title, so letâ€™s say â€œSFâ€.</p>
<ol>
<li><p><a href="/ongoing/When/201x/2018/12/10/SF-1">SF 1: What is serverless?</a> Tl;dr: Itâ€™s when you donâ€™t have to reserve capacity before you start.  But itâ€™s not a binary
condition.</p></li>
<li><p><a href="/ongoing/When/201x/2018/12/10/SF-2">SF 2: Why serverless?</a> Tl;dr: Frugality, Security, Elasticity.  That partâ€™s a no-brainer, but will you also get better
software?</p></li>
<li><p><a href="/ongoing/When/201x/2018/12/11/SF-3">SF 3: Serverless everything?</a> Tl;dr: Nope, serverless where possible. To start with, think about control planes and data
planes.</p></li>
<li><p><a href="/ongoing/When/201x/2018/12/14/SF-4">SF 4: Serverless latency?</a> Tl;dr: Itâ€™s complicated. And, there are things to do about it.</p></li>
<li><p><a href="/ongoing/When/201x/2018/12/30/SF-5">SF 5: Serverless bills?</a> Tl;dr: Not <em>always</em> lower. But it depends how you count it.</p></li>
</ol>
</div></content></entry>

<entry>
 <title>SF-5: Serverless Bills?</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/12/30/SF-5' />
 <link rel='replies'        thr:count='0'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/12/30/SF-5#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/12/30/SF-5</id>
 <published>2018-12-30T12:00:00-08:00</published>
 <updated>2018-12-30T17:38:53-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology/Cloud' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Cloud' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>One of the best reasons to go serverless is that you might save a lot of money. This is especially true when your load is peaky and has quiet times; because when your infrastructure isnâ€™t working, youâ€™re not paying.  But, not all loads are peaky.  And hereâ€™s a quote from an AWS internal mailing list: â€œFor every compute load, thereâ€™s some level of TPS where Lambda is going to be more expensive than servers.â€  So, when is that?  And how much should you care?</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>One of the best reasons to go serverless is that you might save a lot of money. This is especially true when your load is peaky
and has quiet times; because when your infrastructure isnâ€™t working, youâ€™re not paying.  But, not all loads are peaky.  And hereâ€™s a
quote from an AWS internal mailing list: â€œFor every compute load, thereâ€™s some level of TPS where Lambda is going to be more
expensive than servers.â€  So, when is that?  And how much should you care?</p>
<p><i>[This is part of the <a href="/ongoing/When/201x/2018/12/09/Serverlessness">Serverlessness</a> series.]</i></p>
<h2 id='p-1'>Saving money with servers</h2>
<p>The answer, of course, like <em>always</em>, is â€œit dependsâ€.  But letâ€™s just jump straight to what strikes me as the canonical
example of someone for whom serverless didnâ€™t work out financially. To learn about it, check out this blog piece by Cory Oâ€™Daniel,
<a href="https://medium.com/coryodaniel/from-erverless-to-elixir-48752db4d7bc">From $erverless to Elixir</a>.</p>
<p>Tl;dr: No, wait, I
donâ€™t want to do a Tl;dr! The piece is funny and wise and instructive and if you care about this stuff, you should just go read it.
Go ahead, Iâ€™ll wait and be here when you get back.</p>
<p>Thereâ€™s no doubt at all that they saved a lot of money. The key lessons I took away from Oâ€™Danielâ€™s piece:</p>
<ol>
<li><p>They were smart to start up serverless, the app was running fine and requiring no management.</p></li>
<li><p>It was <em>hard</em> to get the serverful version running; they saw success on the third attempt, and ended up needing to
know a whole lot about the inner workings of the Erlang ecosystem.</p></li>
<li><p>As Cory says, â€œMind that we already have an ops team and we already have a Kubernetes cluster running.â€</p></li>
<li><p>Elixir is massively cool.  I want to use it for something before I give up on computers.</p></li>
</ol>
<p>And of course, Coryâ€™s closing soundbite (most highlighted on Medium) is worth reproducing:</p>
<blockquote><p>So, should everyone go and rewrite their Serverless services in Elixir? Roll out Kubernetes? Get a nose piercing?
Absolutely not â€¦
What everyone should do is think about where your service is going, and can you afford those costs when you get there. If you
donâ€™t have a team of ops people and you arenâ€™t familiar with serverful stuff, spending $30k/mo on HTTP requests might be cheaper
than an ops team.</p>
</blockquote>
<h2 id='p-2'>Do I agree?</h2>
<p>Mostly, I think.  Although if Cory worked for me I probably would have been sort of pushy about making absolutely sure that there
was no way to keep the current system around and still save some money, rather than toss-and-replace (on the third attempt).  I note
that a lot of their charges were API Gateway, and there are other ways to get data into the system.  The data was on Kinesis, which
is fine, but there are cases where something like SQS or Kafka can be cheaper.
But in the last analysis, itâ€™s not written in letters of gold on stone that serverless will <em>always</em> be cheaper.</p>
<h2 id='p-4'>Cheaper serverless</h2>
<p>To get a feel for the kind of thing Iâ€™d look for, letâ€™s head over to another blog piece,
<a href="https://runbook.cloud/blog/posts/how-we-massively-reduced-our-aws-lambda-bill-with-go/">How We Massively Reduced Our AWS
Lambda Bill With Go</a>, by Sam Bashton of
<a href="https://runbook.cloud/">Runbook.cloud</a>, a nifty-looking monitoring/troubleshooting service.  His narrative sort of
echoes Coryâ€™s, off the top: A popular Lambda-based app started running up some big bills, to the point where it was becoming
painful.</p>
<p>This particular Lambda (like Coryâ€™s) didnâ€™t do much more than pull some data in over the network and persist it.  What was
hurting is that they were running the function for each customer, for each AWS region, every five minutes.  And since business was
good the number of customers was increasing fast; well, you do the math.</p>
<p>Rather than retreating to servers, what they did was smash all those functions together into one, and bring the magic of the Go
language Lambda runtime to bear. Let me quote Sam:</p>
<blockquote><p>In a single morning we refactored the code to use a single Lambda invocation every minute, operating on 20% of the
customer base each time. This Lambda spawns a Goroutine per customer, which spawns a Goroutine per region, which spawns a Goroutine
per AWS service. The Lambda execution time hasnâ€™t increased significantly, because as before weâ€™re mainly waiting on network I/O -
weâ€™re just waiting on a lot more responses at the same time in a single Lambda function. Cost per customer is now much more
manageable however, becoming lower and lower with every sign up.</p></blockquote>
<p>Isnâ€™t that nice?  And no throwaway code, either.</p>
<h2 id='p-3'>Closing thoughts</h2>
<p>My opinion hasnâ€™t changed at all: For building software, <em>use serverless where you can</em>.  Obviously, â€œwhere you canâ€ depends a
lot on the specifics of your app and your budget and your sensitivities.</p>
<p>And when youâ€™re working out the costs of serverless vs
serverful, ask yourself: How much is it worth to you to not have to manage hosts, or containers, or capacities, or Kubernetes?  I
donâ€™t know the number, but Iâ€™m pretty sure itâ€™s not zero.</p>
</div></content></entry>

<entry>
 <title>Christian Practice</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/12/26/Christmas' />
 <link rel='replies'        thr:count='3'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/12/26/Christmas#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/12/26/Christmas</id>
 <published>2018-12-26T12:00:00-08:00</published>
 <updated>2018-12-30T14:39:50-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World/Religion' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Religion' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>Iâ€™m in <a href='https://en.wikipedia.org/wiki/Regina,_Saskatchewan'>Regina, Saskatchewan</a> with family for the holidays. Someone said â€œLetâ€™s go to a Christmas Eve carol serviceâ€ and five of us did that. We went to <a href='http://www.lakeviewchurch.ca/'>Lakeview United</a>, where â€œUnitedâ€ signifies the <a href='https://en.wikipedia.org/wiki/United_Church_of_Canada'>United Church of Canada</a>, the biggest Protestant denomination up here. It was uplifting and pleasant and sort of sad.  Disclosure: Iâ€™m not Christian at all; but still.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>Iâ€™m in
<a href="https://en.wikipedia.org/wiki/Regina,_Saskatchewan">Regina, Saskatchewan</a> with family for the holidays. Someone
said â€œLetâ€™s go to a Christmas Eve carol serviceâ€ and five of us did that. We went to
<a href="http://www.lakeviewchurch.ca/">Lakeview United</a>, where â€œUnitedâ€ signifies the
<a href="https://en.wikipedia.org/wiki/United_Church_of_Canada">United Church of Canada</a>, the biggest Protestant denomination up
here. It was uplifting and pleasant and sort of sad.  Disclosure: Iâ€™m not Christian at all; but still.</p>
<img src="https://www.tbray.org/ongoing/When/201x/2018/12/26/IMG_20181224_203657.png" alt="Carol Service at Lakeview United" />
<p>As you can see, the congregation (for the 8PM December 24th service) was sparse and elderly.  The statistics are remorseless:
<a href="http://www.intrust.org/Magazine/Issues/New-Year-2016/Religious-affiliation-and-attendance-in-Canada">Christianity is
in decline</a>. The proportion of Canadians who attend church weekly is not far from 10%.</p>
<p>This surprises me, if only because the Churchâ€™s tools are still very strong.  The voices raised in Christmas hymns were
breathtaking (the crowd, while small, sang well), the Gospelâ€™s words telling the Christmas story were beautiful, and Sue Breisch,
the Minister, was eloquent and welcoming, broadcasting love and empathy.
<a href="http://www.lakeviewchurch.ca/media?speaker=3">Here</a> are some of her sermons.</p>
<p>The building is really fine in a Sixties kind of way, its
main hall comfortable, with big comfy rocking chairs and coffee tables at the back.</p>
<p>Maybe itâ€™s as simple as this: Even if you donâ€™t actively disbelieve (as I do) the Christian narrative, religion has lost its
urgency, and as lives are increasingly filled by the Net and the pressures of late capitalism, there are ways to fill Sunday
mornings that feel more important.</p>
<p>Having said that, I enjoyed the words and music intensely<span class='dashes'>â€‰â€”</span>â€‰lack of faith didnâ€™t get in the
way<span class='dashes'>â€‰â€”</span>â€‰and recommend doing this sort of thing from time to time.  I also think it might be good for you.
And maybe Iâ€™m wrong, maybe Jesus is the Way, the Truth, and the Light, and youâ€™ll end up saving your soul from eternal torment.</p>
</div></content></entry>

<entry>
 <title>SF-4: Serverless Latency?</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/12/14/SF-4' />
 <link rel='replies'        thr:count='5'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/12/14/SF-4#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/12/14/SF-4</id>
 <published>2018-12-14T12:00:00-08:00</published>
 <updated>2018-12-15T16:22:09-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology/Cloud' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Cloud' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>Suppose we like the idea of going serverless (we do).  What should we worry about when we make that bet?  What I hear when I talk to people thinking about it, mostly, is latency.  Can a run-on-demand function respond as quickly as a warmed-up Web server sitting there in memory waiting for incoming work?  The answer, unsurprisingly, is â€œit dependsâ€.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>Suppose we like the idea of going serverless (we do).  What should we worry about when we make that bet?  What I hear when I talk
to people thinking about it, mostly, is latency.  Can a run-on-demand function respond as quickly as a warmed-up Web server sitting
there in memory waiting for incoming work?  The answer, unsurprisingly, is â€œit dependsâ€.</p>
<p><i>[This is part of the <a href="/ongoing/When/201x/2018/12/09/Serverlessness">Serverlessness</a> series.]</i></p>
<h2 id='p-1'>What we talk about when we talk about latency</h2>
<p>First of all, in this context, latency conversations are almost all about <em>compute</em> latency; in the AWS context, that
means Lambda
functions and Fargate containers.  For serverless messaging services like SQS and databases like DynamoDB, the answer is generally
â€œfast enough to not worry aboutâ€.</p>
<p>Thereâ€™s this anti-pattern that still happens sometimes: Iâ€™m talking to someone about this subject, and they say â€œI have a hard
latency requirement of 120msâ€.  (For those who arenâ€™t in this culture, â€œmsâ€ stands for milliseconds and is the common currency of
latency discussions. So in this case, a little over a tenth of a second.)</p>
<p>Inside AWS, a claim like that would be met with a blank
stare, because latency is way, way more than just a number. To steal from an old joke: Latency is more complicated than you think,
even when you think itâ€™s more complicated than you think.  Letâ€™s start with a graph:</p>
<img src="latency-graph.png" alt="Latency Graph" />
<p>To start with, nobody should ever talk about latency without a P-number.  P50 means a time such that latency is less than that 50% of
the time, P90 such that latency is less 90% of the time, and so on into P99, P99.9; and then P100 is the longest latency observed in
some measurement interval.</p>
<p>Looking at that graph, you can see that half the queries completed in about a quarter of a second, 90% in
under a second, 99% in under five seconds, and there were a few trailers out there in twenty-something second territory. (If youâ€™re
wondering, this is a real graph of one of the microservices inside EC2 Auto Scaling, some control-plane call. The variation is
because most Auto Scaling Groups have a single-digit handful of instances in them, but some have hundreds and a very few have tens
of thousands.)</p>
<p>Now, letâ€™s make it more complicated.</p>
<h2 id='p-2'>Running hot and cold</h2>
<p>The time it takes to launch a function depends on how recently youâ€™ve launched the function. Because if youâ€™ve run it reasonably
recently, weâ€™ve probably got it loaded on a host and ready to go, itâ€™s just a matter of routing the event to the right place. If
not, we have to go find an empty host, find your function in storage, pull it out, and install it before we fire it up.  The latter
scenario is referred to as a â€œCold Startâ€, and with any luck will only show up at some high P-number, like P90 or higher. The
latency difference can be surprising.</p>
<p>It turns out that there are a variety of tricks you can use to remediate cold-start effects;
<a href="https://duckduckgo.com/?q=keeping+lambda+warm&amp;t=h_&amp;ia=web">ask your favorite search engine</a>. And thatâ€™s all Iâ€™m
going to say on the subject, because while the techniques work, theyâ€™re annoying and itâ€™s also annoying that people have to use
them; this is a problem that we need to just do away with.</p>
<img src="https://www.tbray.org/ongoing/When/201x/2018/12/14/warming-lambda.png" alt="warming up a lambda" />
<div class='caption'><p>Photo: Ryan Mahle from Sherman Oaks, CA, USA - Flickr.com</p></div>
<h2 id='p-3'>Polyglot latency</h2>
<p>Once the triggering event is routed to your function, your function gets to start computing.  Unfortunately, that doesnâ€™t mean it
always starts doing useful work right away; and that depends on the language itâ€™s written in.  If itâ€™s a NodeJS or Python program,
it might have to load and compile some source code.  If itâ€™s Java or .NET, it may have to get a VM running.  If itâ€™s Go or C++ or
Rust, you drop straight into binary code.</p>
<p>And because this is latency, itâ€™s even more complicated than that.  Because some of the language runtime initialization happens
only on cold starts and some even on warm starts.</p>
<p>Itâ€™s worth saying a few words about Java here.  There is no computer language that, for practical purposes, runs usefully faster
on general-purpose server-side code than Java. That is to say, Java after your program is all initialized and the VM warmed
up. There has been a more-or-less conscious culture, stretching back over the decades of Javaâ€™s life, of buying runtime performance
and being willing to sacrifice startup performance.</p>
<p>And of course itâ€™s not all Javaâ€™s fault; a lot of app code starts up slow because of massive dependency-injection frameworks
like Spring and Guice; these tend to prioritize flurries of calls through the Java reflection APIs over handling that first request.
Now, Java neednâ€™t have sluggish startup; if you <em>must</em> have dependency injection, check out
<a href="https://google.github.io/dagger/">Dagger</a>, which tries to do it at compile time.</p>
<img src="gopher.png" alt="The Go language gopher mascot" class="inline" />
<p>The take-away, though, is that mainstream Java is slow to start and you need to do extra work to get around that. My reaction is
â€œMaybe donâ€™t use Java then.â€ There are multiple other runtimes whose cold-start behavior doesnâ€™t feature those ugly P90 numbers.
One example would be NodeJS, and you could use that but I wouldnâ€™t, because I have no patience for the NPM dependency labyrinth
and also donâ€™t like JavaScript. Another would be Python, which is not only a decent choice but almost compulsory if youâ€™re in
Scientific Computing or Machine Learning.</p>
<p>But my personal favorite choice for serverless compute is the Go programming language. Itâ€™s got great, clean, fast, tooling, it
produces static binaries, itâ€™s got superb concurrency primitives that make it easy to avoid the kind of race conditions that plague
anyone who goes near java.lang.Thread, and finally, it is exceedingly readable, a criterion that weighs more heavily with me as each
year passes.  Plus the
<a href="https://github.com/aws/aws-lambda-go">Go Lambda runtime</a> is freaking excellent.</p>
<h2 id='p-4'>State hydration</h2>
<p>Itâ€™s easy to think about startup latency problems as part of the infrastructure, whether itâ€™s the service or the
runtime, but lots of times, latency problems are right there in your own code.  Itâ€™s not hard to see why; services like Lambda are
built around stateless functions, but sometimes, when an event arrives at the front door, you need some state to deal with it.
I call this process â€œstate hydrationâ€.</p>
<p>Hereâ€™s an extreme example of that: A startup I was talking to that had a growing customer base and also growing AWS bills.  Their
load was super peaky and they were (reasonably) grumpy about paying for computers to not do anything.  I said â€œServerless?â€ and they
said â€œYeah, no, not going to happenâ€ and I said â€œWhy not?â€ and they said â€œDrupalâ€.  Drupal is a PHP-based Web framework that
probably still drives a substantial portion of the Internet, but itâ€™s <em>very</em> database-centric, and this particular app needed
to run like eight PostgreSQL queries to recover enough context to do any useful work.  So a Lambda function wasnâ€™t really an
option.</p>
<p>Hereâ€™s an extreme example of the opposite, that I presented in a session at re:Invent 2017.  Thomson Reuters is a well-known news
organization that has to deal with loads of incoming videos; the process includes transcoding and reformatting.  This tends to be
linear in the size of the video with a multiplier not far off 1, so a half-hour video clip could take a half-hour to process.</p>
<p>They came up with this ultra-clever scheme where they used
<a href="https://www.ffmpeg.org/">FFmpeg</a> to chop the video up into half-second-ish segments, then threw them into an S3 bucket which
theyâ€™d set up to fire a Lambda for each new object. Those Lambdas processed the segments in parallel, FFmpeg glued them back
together, and all of a sudden they were processing a half-hour video in a handful of seconds.  State hydration?  No such thing, the
only thing the Lambda needed to know was the S3 object name.</p>
<p>Another nice thing about the serverless approach here is that doing this in the traditional style would have required staging a big
enough fleet, which (since this is a <em>news</em> publisher) would have meant predicting when news would happen, and how telegenic
it would be. Which would obviously be impossible.  So this app has SERVERLESS written on it in letters of fire 500 meters high.</p>
<h2 id='p-5'>Database or not</h2>
<p>The conventional approach to state hydration is to load your context out of a database.  And thatâ€™s not necessarily terrible, it
doesnâ€™t mean you have to get stuck in a corner like those Drupal-dependent people. For example:</p>
<ol>
<li><p>You could use something like Redis or Memcache (maybe via
<a href="https://aws.amazon.com/elasticache/">Elasticache</a>); those things are <em>fast</em>.</p></li>
<li><p>You could use a key/value optimized NoSQL database like DynamoDB or Cassandra or Mongo.</p></li>
<li><p>You could use something that supports GraphQL (like
<a href="https://aws.amazon.com/appsync/">AppSync</a>), a protocol specifically designed to turn a flurry of RESTful fetches into a
single optimized HTTP round trip.</p></li>
<li><p>You could package up your events with a whole lot more context so that the code processing them doesnâ€™t have to do much work
to get its bearings.  The SQS-to-Lambda capability we announced earlier this year is getting a whole lot of use, and I bet most
of those reader functions start up pretty damn quick.</p></li>
</ol>
<h2 id='p-6'>Latency and affinity</h2>
<p>Thereâ€™s been this widely-held belief for years that the only way to get good latency in handling events or requests is to have
state in memory.  Thus we have things like session affinity and â€œsticky sessionsâ€ in conventional Web-facing apps, where you try to
route strongly-related queries to the same server in a load-balanced fleet.</p>
<p>This can help with latency (weâ€™ve used it in AWS services), but comes with its own set of problems.  Most obviously, what happens
when you lose that host, either because it fails or because you need to bounce it to patch the OS?  First, you have to notice that
itâ€™s gone (harder than youâ€™d think to do reliably), then you have to adjust the affinity routing, then you have to refresh the
context in the replacement server. And what happens when you lose a whole Availability Zone, say a third of your fleet?</p>
<p>If you can possibly figure out a way to do state hydration fast, then you donâ€™t have to have those session affinity struggles;
just spray your requests or events across your fleet, trying to stress all the hosts evenly (still nontrivial, but tractable) and
have a much simpler management task.</p>
<p>And once youâ€™ve done that, you can probably just go serverless, let Lambda handle smoothing out the load, and donâ€™t write any code that
isnâ€™t pure value-adding application logic.</p>
<h2 id='p-7'>How to talk about it</h2>
<p>To start with, donâ€™t just say â€œI need 120ms.â€ Try something more like â€œThis has to be in Python, the dataâ€™s in Cassandra, and I need
the P50 down under a fifth of a second, except I can tolerate 5-second latency if it doesnâ€™t happen more than once an hour.â€
And in most mainstream applications, you should be able to get there with serverless. If you plan for it.</p>
</div></content></entry>

<entry>
 <title>SF-3: Serverless Everything?</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/12/11/SF-3' />
 <link rel='replies'        thr:count='1'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/12/11/SF-3#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/12/11/SF-3</id>
 <published>2018-12-11T12:00:00-08:00</published>
 <updated>2018-12-14T08:40:07-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology/Cloud' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Cloud' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>Sometimes we fans get a little over-excited and declaim that <em>everything</em> should be serverless. After all, weâ€™re pretty convinced that owning data centers and computers is becoming a thing of the past.  Well then, how could configuring your own hosts and paying for them even when theyâ€™re not working ever be a good idea?  Letâ€™s try to be moderate and pragmatic: <em>Serverless, where possible</em>.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>Sometimes we fans get a little over-excited and declaim that <em>everything</em> should be serverless. After all,
weâ€™re pretty convinced that owning data centers and computers is becoming a thing of the past.  Well then, how could configuring
your own hosts and paying for them even when theyâ€™re not working ever be a good idea?  Letâ€™s try to be moderate and
pragmatic: <em>Serverless, where possible</em>.</p>
<p><i>[This is part of the <a href="/ongoing/When/201x/2018/12/09/Serverlessness">Serverlessness</a> series.]</i></p>
<p>But what does â€œWhere possibleâ€ mean?  Hereâ€™s a nice concrete example from inside AWS: the
<a href="https://aws.amazon.com/amazon-mq/">Amazon MQ</a> service, which is a managed version of the excellent
<a href="http://activemq.apache.org/">Apache ActiveMQ</a> open-source message broker.</p>
<img src="https://www.tbray.org/ongoing/When/201x/2018/12/11/MQ.png" alt="How Amazon MQ works" />
<p>To make this usable by AWS customers, we had to write a bunch of software to create, deploy, configure, start, stop, and delete
message brokers.  In this sort of scenario, ActiveMQ itself is called the â€œdata planeâ€ and the management software we wrote is
called the â€œcontrol planeâ€. The control planeâ€™s APIs are RESTful and, in Amazon MQ, its implementation is entirely serverless, based
on Lambda, API Gateway, and DynamoDB.</p>
<p>Iâ€™m pretty convinced, and pretty sure this belief is shared widely inside AWS, that for this sort of control-plane stuff,
serverless is the right way to go, and any other way is probably a wrong way.  Amazon MQ is a popular service, but how often do you
need to wind up a new broker, or reconfigure one?  Itâ€™d be just nuts to have old-school servers sitting there humming away all the
time just waiting for someone to do that. Environmentally nuts and economically nuts.  So, donâ€™t do that.</p>
<p>The data plane, ActiveMQ, is a big Java program that you run on an EC2 instance the control plane sets up for you.
Client programs connect to it by nailing up TCP/IP
connections and shooting bytes back and forth.  MQ and its clients take care of the message framing with a variety of protocols:
STOMP, MQTT, AMQP, and JMS/OpenWire.  This is obviously not RESTful.</p>
<p>Because of the permanent connection (unlike an HTTP API that
sets them up and tears them down for each request) the messaging latency can be really, really low.  Of course, the downside of that
that the scaling is limited to whatever a single broker instance can handle.</p>
<p>Anyhow, the data plane is absolutely not serverless.  Is this OK?  Iâ€™m going to say that itâ€™s
just fine.  Among other things, at the moment we donâ€™t have a good serverless way to simultaneously use nailed-up TCP/IP connections
and dispatch serverless functions; you can imagine such a thing, but we donâ€™t have it now.</p>
<p>Because itâ€™s not serverless its scalability is limited, and youâ€™re going to be paying for it to turn electricity into heat
24/7/365 whether youâ€™re doing any messaging or not.  But for a lot of customers who just want somebody else to manage their MQ
instances, or who have to integrate with legacy apps that talk JMS or AMQP or whatever, itâ€™s still super useful.</p>
<h2 id='p-1'>Global weather</h2>
<p>Let me give you another example.  I was recently talking to a large public-sector weather service that maintains a model of the
global weather picture.  This needs to be updated all the time, and the update needs to complete in 43 minutes. The actual software
is a vast, sprawling thing built up over decades and substantially in FORTRAN.  To get acceptable performance, they have to buy
insanely expensive supercomputers and run them flat out.</p>
<p>Would serverless be a good idea?  Well maybe, but they donâ€™t know to decompose the model into small enough pieces to fit
into serverless functions.  â€œAre you looking at that?â€ I asked. â€œWeâ€™d love to,â€ was the answer â€œbut anyone who can figure it
out will probably get a Nobel Prize. Want to try?â€</p>
<p>I think that, since weather forecasting is pretty important to civic well-being, we can all agree that this is another scenario
where being serverful is OK. (Well, until someone wins that Nobel Prize.)</p>
<h2 id='p-2'>Back to the mainstream</h2>
<p>Now, letâ€™s stipulate that most customers are writing neither real-time message brokers nor models of the global atmosphere. Most
are running something with a Web front end and a database back-end and straightforward application logic in between.  These days,
itâ€™d be unsurprising if there were events streaming in from dumb machines or user clickstreams or whatever.  Why shouldnâ€™t all of
this be serverless?  I think it usually should be, but there are things that reasonable people worry about and deserve
consideration.  Thatâ€™s next.</p>
</div></content></entry>

<entry>
 <title>SF-2: Why Serverless?</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/12/10/SF-2' />
 <link rel='replies'        thr:count='1'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/12/10/SF-2#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/12/10/SF-2</id>
 <published>2018-12-10T12:00:00-08:00</published>
 <updated>2018-12-13T22:48:25-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology/Cloud' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Cloud' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>Well obviously: Frugality, security, and elasticity.  But I want more, I want <em>better software</em>.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>Well obviously: Frugality, security, and elasticity.  But I want more, I want <em>better software</em>.</p>
<p><i>[This is part of the <a href="/ongoing/When/201x/2018/12/09/Serverlessness">Serverlessness</a> series.]</i></p>
<h2 id='p-1'>Frugality</h2>
<p>The core idea is that when your workload goes to zero, so does your bill.  You might save big;
<a href="https://aws.amazon.com/solutions/case-studies/financial-engines/">Financial Engines</a> is the first case study that Google
popped up for me, but Iâ€™ve heard muttered stories in the hallways about way bigger savings than that.  And then thereâ€™s my co-worker
who took his school-photographer wifeâ€™s Website billings from $10/month down to a few cents.</p>
<p>And weâ€™re not just talking about Lambda.  When there are no messages flowing through your SQS queue, youâ€™re not paying
anything. When your Step Functions workflow is waiting, itâ€™s just a row in a database. And so on and so on.</p>
<img src="https://www.tbray.org/ongoing/When/201x/2018/12/10/DsEx9t5U0AASIlI.png" alt="From Werner Vogelsâ€™ 2017 re:invent keynote" />
<div class='caption'><p>Disclosure: I lobbied to get that soundbite into that keynote.</p></div>
<h2 id='p-2'>Security</h2>
<p>When you canâ€™t see the servers, that means weâ€™re taking care of them.  And since servers fail, our services have to be designed to
survive restarts. Which means that we can (and do) bounce them whenever they need patching.  So whatever hosts your DynamoDB table
or your SNS topic is running on, theyâ€™re likely freshly-enough patched to cut the number of known vulnerabilities to just about the
minimum possible. <i>[Urgh, upon typing this, it occurred to me to check the uptime on the Linux box hosting
this blog, and itâ€™s like a year. The box generating the bits you are now reading is probably a soft target for
all the bad guys out there. Ahem.]</i></p>
<p>Anyhow, thereâ€™s no perfect security in this bad old world, but freshly-patched instances really do help a lot.</p>
<h2 id='p-3'>Elasticity</h2>
<p>When we deliver serverless services, what weâ€™re really trying to do is get you out of the business of capacity
forecasting. That business <em>sucks</em>.  Itâ€™s hard, and easy to get wrong; the penalty for estimating low is lousy
performance for your customers, and estimating high is throwing away money.  So go serverless and let us take care of that for
you.</p>
<p>(By the way, Iâ€™m not claiming that weâ€™re any smarter about capacity management than you are. When you aggregate all the AWS
customersâ€™ traffic, the lumpy local variations even out.  So itâ€™s a much easier problem if youâ€™re a public-cloud
provider. Of course you have to not mind billions in capex.)</p>
<h2 id='p-4'>What about software quality?</h2>
<p>As
<a href="/ongoing/When/201x/2018/07/31/Serverless-Economics">Iâ€™ve blogged before</a>, that â€œFrugality, Security, Elasticityâ€ pitch
operates at a more or less pure business level.  But Iâ€™m a technologist and engineer, so I have to ask,
are serverless application designs <em>better</em> designs?  I think the only honest answer is â€œWe donâ€™t know yet.â€</p>
<p>Having
said that, my gut is saying â€œyesâ€.  It helps that Iâ€™m an old functional-programming bigot, and the notion of stateless functions in
the cloud responding to events gives me a warm glow.  There are things we <em>do</em> know: microservices that are connected
asynchronously with messaging systems (e.g. SQS, 100% serverless) are more robust and flexible than those that arenâ€™t.  Butâ€¦ Can I
say we have a basis of experience sufficiently strong to say â€œServerless software is betterâ€?  Nope.</p>
<p>But Iâ€™m pretty sure that going serverless isnâ€™t going to give you a <em>worse</em> design. So you should bloody well go ahead and
do it, because: Frugality, Security, and Elasticity.</p>
<h2 id='p-5'>But waitâ€¦</h2>
<p>Look at that picture above from Werner Vogelsâ€™ keynote at the 2017 re:Invent.</p>
<p>Then consider the fact that you have a finite time budget for software design.  If you go serverless, then you you donâ€™t
have to design Kubernetes flows or Auto Scaling policies or fleet-health metrics or any of that other stuff.  All your design time
can be dedicated to, like Wernerâ€™s slide says, software that directly addresses business issues.  So, given more design time, youâ€™re
<em>probably</em> gonna get a better design with serverless.</p>
<p>My feeling is, the <em>why</em> of serverless is pretty obvious. Itâ€™s the <em>how</em> thatâ€™s interesting.</p>
</div></content></entry>

<entry>
 <title>SF-1: What Is Serverless?</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/12/10/SF-1' />
 <link rel='replies'        thr:count='0'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/12/10/SF-1#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/12/10/SF-1</id>
 <published>2018-12-10T12:00:00-08:00</published>
 <updated>2018-12-13T22:48:12-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology/Cloud' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Cloud' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>I donâ€™t think itâ€™s <em>that</em> complicated: If you canâ€™t see the servers in the service, then itâ€™s serverless.  Yeah, theyâ€™re still there, but the <em>whole point</em> is that you can mostly not worry about them.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>I donâ€™t think itâ€™s <em>that</em> complicated: If you canâ€™t see the servers in the service, then itâ€™s serverless.  Yeah, theyâ€™re
still there, but the <em>whole point</em> is that you can mostly not worry about them.</p>
<p><i>[This is part of the <a href="/ongoing/When/201x/2018/12/09/Serverlessness">Serverlessness</a> series.]</i></p>
<p>That doesnâ€™t work just for functions: Lots of
services, for example RDS (in certain flavors), ElasticSearch, and Amazon MQ, require that you pick an instance that the service runs
on before you start.  Letâ€™s extend the nomenclature a bit; if anything requires that you pre-provision IOPS (or other unit of
capacity), then thatâ€™s not so serverless.</p>
<img src="MQ-broker.png" alt="Launching an Amazon MQ broker" />
<div class='caption'><p>Itâ€™s a great service, but itâ€™s not serverless.</p></div>
<h2 id='p-2'>Etymology</h2>
<p>Several people, starting with Werner Vogels, have griped about the name â€œserverlessâ€, finding it ill-conceived and pointed in the
wrong direction, preferring positive rather than negative names.  Fair enough, but too bad, English is not just a living language
but a hasty, impulsive, pigheaded one, and itâ€™s settled on â€œServerlessâ€ now, so just deal.</p>
<p>By the way, any fool can plainly see that the opposite of Serverless is Serverful, with just one trailing â€œlâ€, just like
faithful, sinful, and skillful.</p>
<h2 id='p-1'>Itâ€™s not binary</h2>
<p>I heartily recommend Ben Kehoeâ€™s
<a href="https://read.acloud.guru/the-serverless-spectrum-147b02cb2292">The Serverless Spectrum</a> in support of this point.  Let
me illustrate by example:  Your basic enterprise Oracle deployment is the most serverful thing imaginable; with the primary,
fallback, and standby instances, itâ€™s <em>triply</em> serverful!
RDS Aurora Serverless is more serverless, and while DynamoDB has always been even more serverless, with the advent of
<a href="https://aws.amazon.com/blogs/aws/amazon-dynamodb-on-demand-no-capacity-planning-and-pay-per-request-pricing/">On-Demand
mode</a>, itâ€™s <em>really</em> serverless.</p>
<p>Another example: An EC2 instance is hardly serverless, a Docker container launched in Fargate is really pretty serverless, while
a Lambda function is the epitome of serverlessness.</p>
<p>I think we are past the time to argue about what â€œserverlessâ€ means.</p>
</div></content></entry>

<entry>
 <title>Step Functions Integration</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/11/30/States-Language-Connectors' />
 <link rel='replies'        thr:count='1'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/11/30/States-Language-Connectors#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/11/30/States-Language-Connectors</id>
 <published>2018-11-30T12:00:00-08:00</published>
 <updated>2018-11-30T22:09:56-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology/Cloud' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Cloud' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>On Thursday we launched some add-ons for <a href='https://aws.amazon.com/step-functions/'>AWS Step Functions</a>, on which I helped a bit. As usual, thereâ€™s <a href='https://aws.amazon.com/blogs/aws/new-compute-database-messaging-analytics-and-machine-learning-integration-for-aws-step-functions/'>a nice Jeff Barr blog</a>. This is to add design notes and extra color.</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>On Thursday we launched some add-ons for
<a href="https://aws.amazon.com/step-functions/">AWS Step Functions</a>, on which I helped a bit. As usual, thereâ€™s
<a href="https://aws.amazon.com/blogs/aws/new-compute-database-messaging-analytics-and-machine-learning-integration-for-aws-step-functions/">a
nice Jeff Barr blog</a>. This is to add design notes and extra color.</p>
<p>Our announcement describes these as â€œIntegrationsâ€<span class='dashes'>â€‰â€”</span>â€‰internally, while we were building them, we
called them Connectors, and Iâ€™m going to stick with that because it has one less syllable and feels idiomatic.</p>
<h2 id='p-1'>Tl;dr</h2>
<p>Up till now, Step Functions knew how to hand work to Lambda functions and to polling â€œActivity Workersâ€.  As of now, it can also
make use
of DynamoDB (read/write), Batch (start a job in either fire-and-forget or wait-for completion mode), ECS (regular and Fargate
flavors), SNS (write-only), SQS (write-only), Glue (like Batch, async or sync), and SageMaker (same).</p>
<p>Of course, you could do all this before, by running a little Lambda function to call whatever API, but now Step Functions
knows how to make those calls directly. Which means fewer Lambdas to own and maintain.  Also this should run a little faster without
an interposed function, and finally, Step Functions can be smarter about dealing with retries and throttling and so on.</p>
<h2 id='p-2'>How it works</h2>
<p>Nothing essential in the
<a href="https://states-language.net/spec.html">Amazon States Language</a> has changed.  Just as before, you use a Task State to get
work done, and you identify the work in the value of the Resource field, which is a URI.  Used to be, the only URIs recognized were
Lambda ARNs and Activity-worker Task ARNs. Yeah, as far as I know, nobodyâ€™s ever registered AWSâ€™s â€œarnâ€ URI scheme, but for all
practical purposes theyâ€™re perfectly good URIs.</p>
<p>So all we really had to do to make this work was teach Step Functions to recognize new flavors of ARNs: One for each of the
operations I mentioned above.  For example, the Resource value that requests fetching a DynamoDB item is
<code>arn:aws:states:::dynamodb:getItem</code>.  All the other stuff in Task states about Retriers and Catchers and so on goes on
working just as it did before.</p>
<p>This notion of short strings that identify a â€œunit of information or serviceâ€ is a straightforward use of URIs,
and shouldnâ€™t be surprising to anyone who understands how the Web works.</p>
<p>In most cases, the implementation is simple enough; the service just feeds the appropriate input data to the indicated API.
But a couple of the new Connectors go further, for example running a Batch job in synchronous mode.  It turns out that the Batch service
only has a fire-and-forget API, so what the service does in this case is write a rule into the callerâ€™s CLoudWatch Events account
which catches
<a href="https://docs.aws.amazon.com/batch/latest/userguide/batch_cwe_events.html">Batchâ€™s job-finished event</a>
and routes it to an SQS queue, which Step Functions has a long-poll posted on to find out
when the work is done.</p>
<p>Once again, customers could previously have set this up for themselves (and in fact some have) but it just makes more sense to
offer it as a built-in.</p>
<h2 id='p-5'>Parameterization</h2>
<p>Step Functions has always had a tool,
<a href="https://states-language.net/spec.html#filters">the â€œInputPathâ€ field</a>, to filter incoming input and select bits and
pieces of it to feed to
workers.  When we started working on the first few Connectors, we realized it wasnâ€™t quite up to the task of assembling the correct
input for an arbitrary collection of API calls.  We were at risk of replacing the dumb little Lambdas that existed just to call APIs
with even dumber little Lambdas that just wrangled JSON into the right shape to call the API.</p>
<p>Thus the States Languageâ€™s brand-new â€œParametersâ€ field.  To explain this, Iâ€™m going to re-use the example from Jeffâ€™s blog linked
above:</p>
<pre><code> 1 "Read Next Message from DynamoDB": {
 2      "Type": "Task",
 3      "Resource": "arn:aws:states:::dynamodb:getItem",
 4      "Parameters": {
 5        "TableName": "StepDemoStack-DDBTable-1DKVAVTZ1QTSH",
 6        "Key": {
 7          "MessageId": {"S.$": "$.List[0]"}
 8        }
 9      },
10      "ResultPath": "$.DynamoDB",
11      "Next": "Send Message to SQS"
12    }</code></pre>
<p>You can see the magic read-from-Dynamo ARN there in the Resource field on line 3.  But itâ€™s the Parameters field value thatâ€™s
interesting.
It has the right JSON shape to hold the <code>GetItem</code> API arguments, but buried down in the Key field on line 7 thereâ€™s a little
weirdness going on.  It turns out that DynamoDB wants you to pass a string argument by sending JSON that looks like:</p>
<p><code>"S": "My own personal string key"</code></p>
<p>In line 7, you see a field whose name is â€œS.$â€ and value is â€œ$.List[0]â€.  That â€œ.$â€ suffix is the new
thing; whenever you see that in the Parameters block, it means that the value is to be interpreted as a JSONPath, applied to the
stateâ€™s input, and then the whole field is replaced by one whose name is the same with the â€œ.$â€ suffix subtracted, and whose value
is whatever you got from the JSONPath.<br/>
<i>[Tim, what if their API already uses a field whose name ends in â€œ.$â€? -Ed.]<br/>
[That would be unfortunate. -T]</i> </p>
<p>We think this should provide people with most of what they need to compose the arguments for almost
anything you might want to invoke.
By the way, the Parameters-block idea wasnâ€™t mine, it was cooked up by folks on the Step Functions team, notably Ali Baghani.  And
because itâ€™s not mine, I can say: Way cool!</p>
<h2 id='p-7'>Permissions</h2>
<p>If you go to the console and set up a state machine like the one in the example, we can do an extra trick, namely look at all the
Connectors in your machine, figure out what permissions you need to make those calls, and synthesize a Role for you, designed to be
used in running that state machine.</p>
<h2 id='p-6'>API mapping?</h2>
<p>Now, if you look at the way weâ€™ve provided mappings for a few of the AWS APIs, you might reasonably wonder â€œWhy not <em>all</em>
of them?â€.  After all, I notice that
<a href="https://github.com/DiegoZoracKy">Diego ZoracKy</a> recently published
<a href="https://github.com/DiegoZoracKy/lambda-aws-sdk-call">a general-purpose Lambda function</a> that does just
that<span class='dashes'>â€‰â€”</span>â€‰give it the API name and the right arguments and itâ€™ll do the call.</p>
<p>Itâ€™s not a crazy idea, but weâ€™re not going to do it.  Blindly calling APIs without having thought it through a little could be a
recipe for unhappiness.  We want to make sure that when we make those calls, weâ€™re being sensible about buffering, polling mode,
retrying, checking for impossible arguments, and so on. For example, we support sending a message to SQS, but receiving one will
require some head-scratching about whether and when to delete after a successful read. </p>
<p>Also, in some cases we might want to do prep work, as we already do to make
those asynchronous fire-and-forget APIs look synchronous when you put them in a state machine.</p>
<p>So, weâ€™re going to reserve the right to add Connectors at our own speed and in a thoughtful way.</p>
<h2 id='p-3'>Future directions</h2>
<p>The fact that we identify workers with URIs leaves the door open for any kind of future Connector you can think of.
There are lots of obvious candidates in the AWS SDK, to start with.  One especially obvious one is supporting the ARNs of other Step
Functions state machines, giving you nested child-workflow invocations.</p>
<p>Another is allowing the use of any old HTTP endpoint URL, so your state machine could talk to any Web API in the
universe.  I suppose weâ€™ll need to add an "HTTP-method" field or equivalent to specify whether you want GET or
POST.</p>
<p>Anyhow, there are lots of Step Functions features on the road map that arenâ€™t just Connectors; but I suspect that weâ€™re going to
come under pressure to keep adding them, starting today and going on more or less forever.</p>
<h2 id='p-8'>States-Language housekeeping</h2>
<p>The
<a href="https://states-language.net/spec.html">States Language spec</a> has been updated, and so has its
<a href="https://github.com/awslabs/states-language">source on GitHub</a>.  So has the
<a href="https://github.com/awslabs/statelint">statelint</a> state-machine validator (and the Ruby Gem updated).</p>
<p>All these years
into my career, I still get a little thrill being part of the Launch Day dance, a few little pushes with my own pinkies.</p>
<p>I tested my parts pretty hard but there might be bugs; I do look at pull requests and have taken some in the past.  In particular I
have to say thank-you for
<a href="https://github.com/awslabs/j2119/commits?author=jezhiggins">jezhigginsâ€™ updates</a>
to the supporting <a href="https://github.com/awslabs/j2119">j2119 parser generator</a> that
made it possible to add Parameters validation to statelint.</p>

</div></content></entry>

<entry>
 <title>Post-REST</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/11/18/Post-REST' />
 <link rel='replies'        thr:count='7'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/11/18/Post-REST#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/11/18/Post-REST</id>
 <published>2018-11-18T12:00:00-08:00</published>
 <updated>2018-11-19T19:38:10-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology/Web' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Technology' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Web' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>More or less all the big APIs are RESTful these days.  Yeah, you can quibble about what â€œRESTâ€ means (and I will, a bit) but the assertion is broadly true.  Is it going to stay that way forever?  Seems unlikely.  So, whatâ€™s next?</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>More or less all the big APIs are RESTful these days.  Yeah, you can quibble about what â€œRESTâ€ means (and I will, a bit) but the
assertion is broadly true.  Is it going to stay that way forever?  Seems unlikely.  So, whatâ€™s next?</p>
<h2 id='p-1'>What we talk about when we talk about â€œRESTâ€</h2>
<p>These days, itâ€™s used colloquially to mean any API that is HTTP-based.  In fact, the vast majority of them offer CRUD operations
on things that have URIs, embed some of those URIs in their payloads, and thus are arguably RESTful in the original sense; although
these days Iâ€™m hearing the occasional â€œCRUDLâ€ where L is for List.</p>
<p>At AWS where I work, we almost always distinguish, for a service or an app, between its â€œcontrol planeâ€ and its â€œdata planeâ€.
For example, consider our database-as-a-service
<a href="https://aws.amazon.com/rds/">RDS</a>; the control plane APIs are where you create, configure, back-up, start, stop, and
delete databases.  The data plane is SQL, with connection pools and all that RDBMS baggage.</p>
<p>Itâ€™s interesting to note that the control plane is RESTful, but the data plane isnâ€™t at all. (This isnâ€™t
necessarily a database thing: DynamoDBâ€™s data plane is pretty RESTful.)</p>
<p>I think thereâ€™s a pattern there: The control plane for almost <em>anything</em> online has a good chance of being RESTful because,
well, thatâ€™s where youâ€™re going to be creating and deleting stuff.
The data plane might be a different story; my first prediction here is that whatever starts to displace REST will start doing it on
the data plane side, if only because control planes and REST are such a natural fit.</p>
<h2 id='p-2'>RESTful imperfections</h2>
<p>What are some reasons we might want to move beyond REST?  Let me list a few:</p>
<h3 id='p-4'>Latency</h3>
<p>Setting up and tearing down an HTTP connection for every little operation you want to do is not free.  A couple of decades
of effort have reduced the cost, but still.</p>
<p>For example, consider two messaging systems that are built by people who sit close to me:
<a href="https://aws.amazon.com/sqs/">Amazon SQS</a> and <a href="https://aws.amazon.com/amazon-mq/">MQ</a>.
SQS has been running for a dozen years and can handle millions of messages per second and, assuming your senders and receivers are
reasonably well balanced, can be <em>really freaking fast</em><span class='dashes'>â€‰â€”</span>â€‰in fact, Iâ€™ve heard stories of messages
actually being received before they were sent; the long-polling receiver grabbed the message before the sender side got around to
tearing down the PutMessage HTTP connection.  But the MQ data plane, on the other hand, doesnâ€™t use HTTP, it uses nailed-up TCP/IP
connections with its own framing protocols. So you can get astonishingly low latencies for transmit and receive operations. But, on
the other hand, your throughput is limited by the number of messages the â€œmessage brokerâ€ terminating those connections can handle.
A lot of people who use MQ are pretty convinced that one of the reasons theyâ€™re doing this is they donâ€™t <em>want</em> a RESTful
interface.</p>
<h3 id='p-5'>Coupling</h3>
<p>In the wild, most REST requests (like most things labeled as APIs) operate synchronously; that is
to say, you call them (GET, POST, PUT, whatever) and you stall until you get your result back.  Now (speaking HTTP lingo) your
request might return 202 Accepted, in which case youâ€™d expect either to have sent a URI along to be called back as a webhook, or to
get one in the response that you can poll.  But in all these cases, the coupling is still pretty tight; you (the caller) have to
maintain some sort of state about the request until the caller has done with it, whether thatâ€™s now or later.</p>
<p>Which sort of sucks.  In particular when itâ€™s one microservice calling another and the client service is sending
requests at a higher rate than the server-side one can handle; a situation that can lead to acute pain very quickly.</p>
<h3 id='p-6'>Short life</h3>
<p>Handling some requests takes milliseconds. Handling others<span class='dashes'>â€‰â€”</span>â€‰a citizenship application, for
example<span class='dashes'>â€‰â€”</span>â€‰can take weeks and involve orchestrating lots of services, and occasionally human
interactions.  The notion of having a thread hanging waiting for something to happen is ridiculous.</p>
<h2 id='p-7'>A word on GraphQL</h2>
<p>It exists, basically, to handle the situation where a client has to assemble several flavors of information
do its job<span class='dashes'>â€‰â€”</span>â€‰for example, a mobile app building an information-rich display.  Since RESTful interfaces
tend to do a good job of telling you about a single resource, this can lead to a wasteful flurry of requests. So GraphQL lets you
cherry-pick an arbitrary selection of fields from multiple resources in a single request.
Presumably, the server-side implementation issues that
request flurry inside the data center where those calls are cheaper, then assembles your GraphQL output, but anyhow thatâ€™s no longer
your problem.</p>
<p>I observe that lots of client developers like GraphQL, and it seems like the world has a place for it, but I donâ€™t see it as that
big a game-changer. To start with, itâ€™s not as though client developers can compose arbitrary queries, limited only by the semantics
of GraphQL, and expect to get uniformly decent performance. (To be fair, the same is true of SQL.)  Anyhow, I see GraphQL as a
convenience feature designed to make synchronous APIs run more efficiently.</p>
<h2 id='p-8'>A word on RPC</h2>
<p>By which, these days, I guess I must mean gRPC.  I dunno, Iâ€™m old enough that I saw generation after generation of RPC frameworks
fail miserably; brittle, requiring lots of configuration, and failing to deliver the anticipated performance wins.  Smells like
making RESTful APIs more tightly coupled, to me, and itâ€™s hard to see that as a win.  But I could be wrong.</p>
<h2 id='p-9'>Post-REST: Messaging and Eventing</h2>
<p>This approach is all over, and I mean <em>all</em> over, the cloud infrastructure that I work on.  The idea is you get a request,
you validate it, maybe you do some computation on it, then you drop it on a queue (or bus, or stream, or whatever you want to call
it) and forget about it, itâ€™s not your problem any more.</p>
<p>The next stage of request handling is implemented by services that read the queue and either route an answer back to the original
requester or passes it on to another service stage.  Now for this to work, the queues in question have to be fast (which these,
days, they are), scalable (which they are), and very, very durable (which they are).</p>
<p>There are a lot of wins here: To start with, transient query surges are no longer a problem.  Also, once youâ€™ve got a message stream
you can do fan-out and filtering and assembly and subsetting and all sorts of other useful stuff, without disturbing the operations
of the upstream message source.</p>
<h2 id='p-10'>Post-REST: Orchestration</h2>
<p>This gets into workflow territory, something
<a href="https://states-language.net/spec.html">Iâ€™ve been working on a lot recently</a>.  Where by â€œworkflowâ€ I mean a service
tracking the state of computations that have multiple steps, any one of which can take an arbitrarily long time period, can fail,
can need to be retried, and whose behavior and output affect the choice of subsequent output steps and their behavior.</p>
<p>An increasing number of (for example) Lambda functions are, rather than serving requests and returning responses, executing in
the context of a workflow that provides their input, waits for them to complete, and routes their output further downstream.</p>
<h2 id='p-11'>Post-REST: Persistent connections</h2>
<p>Back a few paragraphs I talked about how MQ message brokers work, maintaining a bunch of nailed-up network connections, and
pumping bytes back and forth across them.  Itâ€™s not hard to believe that there are lots of scenarios where this is a good fit for
the way data and execution want to flow.</p>
<p>Now, weâ€™re already partway there. For example, SQS clients routinely use â€œlong pollingâ€ (typically around 30 seconds) to receive
messages. That means, they ask for messages and if there arenâ€™t any, the server doesnâ€™t say â€œno diceâ€, it holds up the connection
for a while and if some messages come in, shoots them back to the caller.  If you have a bunch of threads (potentially on multiple
hosts) long-polling an SQS queue, you can get massive throughput and latency and really reduce the cost of using HTTP.</p>
<p>The next two steps forward are pretty easy to see, too. The first is HTTP/2, already widely deployed, which lets you
multiplex multiple HTTP requests across a single network connection.  Used intelligently, it can buy you quite a few of the benefits
of a permanent connection.  But itâ€™s still firmly tied to TCP, which has some unfortunate side-effects that Iâ€™m not going to
deep-dive on here, partly because itâ€™s not a thing I understand that deeply.  But I expect to see lots of apps and services get good
value out of HTTP/2 going forward; in some part because as far as clients can tell, theyâ€™re still making, and responding to, the
same old HTTP requests they were before.</p>
<p>The next step after that is QUIC (<b>Q</b>uick <b>U</b>DP <b>I</b>nternet <b>C</b>onnections) which abandons
TCP in favor of UDP, while retaining HTTP semantics.  This is already in production on a lot of Google properties.  I personally
think itâ€™s a really big deal; one of the reasons that HTTP was so successful is that its connections are short-lived and thus
much less likely to suffer breakage while theyâ€™re at work. This is really good because designing an application-level protocol which
can deal with broken connections is super-hard.  In the world of HTTP, the most you have to deal with at one time is a failed
request, and a broken connection is just one of the reasons that can happen.  UDP makes the connection-breakage problem go away by not
really having connections.</p>
<p>Of course, thereâ€™s no free lunch.  If youâ€™re using UDP, youâ€™re not getting the TC in TCP, <b>T</b>ransmission <b>C</b>ontrol I
mean, which takes care of packetizing and reassembly and checksumming and throttling and loads of other super-useful stuff.  But
judging by the evidence I see, QUIC does enough of that well enough to support HTTP semantics cleanly, so once again, apps
that want to go on using the same old XMLHttpRequest calls like it was 2005 can remain happily oblivious.</p>
<h2 id='p-12'>Brave New World!</h2>
<p>It seems inevitable to me that, particularly in the world of high-throughput high-elasticity cloud-native apps, weâ€™re going to
see a steady increase in reliance on persistent connections, orchestration, and message/event-based logic.  If youâ€™re not using that
stuff already, now would be a good time to start learning.</p>
<p>But I bet that for the foreseeable future, a high proportion of all requests to services are going to have
(approximately) HTTP semantics, and that for most control planes and quite a few data planes, REST still provides a good clean way
to decompose complicated problems, and its extreme simplicity and resilience will mean that if you want to design networked apps,
youâ€™re still going to have to learn that way of thinking about things.</p>
</div></content></entry>

<entry>
 <title>Car Capitalism</title>
 <link href='https://www.tbray.org/ongoing/When/201x/2018/11/13/Car-Capitalism' />
 <link rel='replies'        thr:count='5'        type='application/xhtml+xml'        href='/ongoing/When/201x/2018/11/13/Car-Capitalism#comments' />
 <id>https://www.tbray.org/ongoing/When/201x/2018/11/13/Car-Capitalism</id>
 <published>2018-11-13T12:00:00-08:00</published>
 <updated>2018-11-13T22:26:52-08:00</updated>
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World/Politics' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='The World' />
 <category scheme='https://www.tbray.org/ongoing/What/' term='Politics' />
 <summary type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>What happened was, I was <a href='/ongoing/When/201x/2018/10/27/Jaguar-Art-of-Performance-tour'>hurtling around a mall parking lot</a> in a beautiful British-designed hundred-thousand-dollar sports car, and I thought â€œIs this the good side of capitalism?â€</div></summary>
<content type='xhtml'><div xmlns='http://www.w3.org/1999/xhtml'>
<p>What happened was, I was
<a href="/ongoing/When/201x/2018/10/27/Jaguar-Art-of-Performance-tour">hurtling around a mall parking lot</a> in a
beautiful British-designed hundred-thousand-dollar sports car, and I thought â€œIs this the good side of capitalism?â€</p>
<h2 id='p-1'>I &#x2665; Cars</h2>
<p>Disclosure: I like driving sufficiently well to have written, ten years ago,
<a href="/ongoing/When/200x/2008/09/19/Driving">an encomium on the subject</a> that includes a police takedown and a poem.</p>
<p>And there are lots of things to like about the business. It produces products across a huge ranges of prices that work
pretty well<span class='dashes'>â€‰â€”</span>â€‰better every year, in fact<span class='dashes'>â€‰â€”</span>â€‰and last a long time, and about
which people have strong aesthetic feelings.</p>
<p>Thereâ€™s no suggestion of monopoly; competition is fierce and itâ€™s possible for new companies
to grab a foothold.  The industry tends to place value on its workers, paying them and treating them reasonably well.  They
do not, at least mostly, have
<a href="https://en.wikipedia.org/wiki/Bullshit_Jobs">bullshit jobs</a>.</p>
<p>Also, cars address humansâ€™ naturally nomadic nature; there is a special joy in getting on the road and
heading out in any direction you damn well please, as far as the road goes.  Making that possible really just canâ€™t be a bad thing.</p>
<h2 id='p-2'>Butâ€¦</h2>
<p>Automobiles have had to be regulated fiercely almost from day one: Their speeds, where they can drive and park,
the safety standards on their tires and electronics and brakes and crumple zones and seatbelts and child seating, and of course
emissions. The notion of a <i>laissez-faire</i> auto industry is laughable.</p>
<p>And given the slightest chance, car companies lie,
cheat, and steal. For example, the recent â€œdieselgateâ€ scandal played out against a backdrop of nudge-nudge wink-wink regulatory
capture where everyone knew that any given car emitted more and got worse mileage than it said on the label.  Sometimes the
corruption was laughably public, as with the US regulators
<a href="https://en.wikipedia.org/wiki/Chrysler_PT_Cruiser#Overview">classifying shitboxes like the PT Cruiser as â€œtrucksâ€</a> so
they could skate around emission regulations.</p>
<p>Not to mention the resistance, in recent years, to looking seriously at electric cars. In the face of terrifying climate-change
predictions, the industry did the absolute bare minimum they were forced to. Only now, under combined pressure from global
regulators and Tesla engineering, are they showing signs of taking it seriously.</p>
<h2 id='p-1'>Your point is?</h2>
<p>Iâ€™m a left-winger and somehow still like a lot of things about business: The drive to figure out what people need and want and
get that to them; the labyrinthine fascinations of marketing and sales; drama in trying something out that might not work;
satisfaction of being on a well-functioning team.</p>
<p>But yeah, the auto industry is the <em>nice</em> end of the private sector.  So much of business is poverty-by-policy, bullshit
jobs, institutionalized mismanagement, work-life balance seen as a failing, egregious sexism, corruption of the public sector, and
hyperentitled one-percenters who are so, so sure that they earned it all with their own hard work, deserve every penny, and the 99%
are just losers who deserve what theyâ€™re getting. [Me, I got lucky and know so many people who are smarter than me and work harder
and are struggling to make ends meet.  Why is that so hard to admit?]</p>
<p>Iâ€™m an optimist. I think we can find a better and more balanced way to build an economy and, in the fullness of time, will. And I
hope we can still have cool cars.</p>
</div></content></entry>

</feed>
